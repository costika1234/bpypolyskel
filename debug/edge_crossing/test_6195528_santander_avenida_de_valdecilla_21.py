import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((-2.666560173034668, -10.3861083984375, 0.0)),
    Vector((0.040402431041002274, -11.087421417236328, 0.0)),
    Vector((-0.1777707189321518, -11.966845512390137, 0.0)),
    Vector((2.7150440216064453, -12.712685585021973, 0.0)),
    Vector((2.9493777751922607, -11.855525016784668, 0.0)),
    Vector((7.789591312408447, -13.102299690246582, 0.0)),
    Vector((7.563338756561279, -13.98172378540039, 0.0)),
    Vector((10.464235305786133, -14.749824523925781, 0.0)),
    Vector((10.68240737915039, -13.870400428771973, 0.0)),
    Vector((17.074079513549805, -15.529047012329102, 0.0)),
    Vector((16.76702308654785, -16.69790267944336, 0.0)),
    Vector((20.152751922607422, -17.57731819152832, 0.0)),
    Vector((20.459808349609375, -16.408462524414062, 0.0)),
    Vector((26.261608123779297, -17.922386169433594, 0.0)),
    Vector((25.96263313293457, -19.09124183654785, 0.0)),
    Vector((29.332204818725586, -19.970653533935547, 0.0)),
    Vector((29.639257431030273, -18.801795959472656, 0.0)),
    Vector((35.34409713745117, -20.304582595825195, 0.0)),
    Vector((35.1016845703125, -21.261930465698242, 0.0)),
    Vector((41.87315368652344, -22.998476028442383, 0.0)),
    Vector((42.10748291015625, -22.05225944519043, 0.0)),
    Vector((44.29730224609375, -22.631107330322266, 0.0)),
    Vector((45.32352066040039, -21.974315643310547, 0.0)),
    Vector((45.96994400024414, -19.447357177734375, 0.0)),
    Vector((46.939605712890625, -19.6922550201416, 0.0)),
    Vector((54.486549377441406, 10.074634552001953, 0.0)),
    Vector((53.51689147949219, 10.31952953338623, 0.0)),
    Vector((53.783538818359375, 11.388198852539062, 0.0)),
    Vector((53.41181182861328, 14.738912582397461, 0.0)),
    Vector((48.57969284057617, 15.406792640686035, 0.0)),
    Vector((45.331356048583984, 14.404894828796387, 0.0)),
    Vector((45.04853439331055, 15.3622407913208, 0.0)),
    Vector((37.695335388183594, 13.080145835876465, 0.0)),
    Vector((38.11552429199219, 12.167327880859375, 0.0)),
    Vector((14.10849666595459, 4.608641624450684, 0.0)),
    Vector((13.833758354187012, 5.465801239013672, 0.0)),
    Vector((10.981355667114258, 4.530712127685547, 0.0)),
    Vector((11.26417350769043, 3.6624207496643066, 0.0)),
    Vector((5.567444324493408, 1.7922461032867432, 0.0)),
    Vector((5.430075645446777, 2.6828019618988037, 0.0)),
    Vector((2.569589853286743, 1.7811123132705688, 0.0)),
    Vector((2.706958055496216, 0.879424512386322, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((-2.666560173034668, -10.3861083984375, 22.338760375976562)),
    Vector((0.040402431041002274, -11.087421417236328, 22.338760375976562)),
    Vector((-0.1777707189321518, -11.966845512390137, 22.338760375976562)),
    Vector((2.7150440216064453, -12.712685585021973, 22.338760375976562)),
    Vector((2.9493777751922607, -11.855525016784668, 22.338760375976562)),
    Vector((7.789591312408447, -13.102299690246582, 22.338760375976562)),
    Vector((7.563338756561279, -13.98172378540039, 22.338760375976562)),
    Vector((10.464235305786133, -14.749824523925781, 22.338760375976562)),
    Vector((10.68240737915039, -13.870400428771973, 22.338760375976562)),
    Vector((17.074079513549805, -15.529047012329102, 22.338760375976562)),
    Vector((16.76702308654785, -16.69790267944336, 22.338760375976562)),
    Vector((20.152751922607422, -17.57731819152832, 22.338760375976562)),
    Vector((20.459808349609375, -16.408462524414062, 22.338760375976562)),
    Vector((26.261608123779297, -17.922386169433594, 22.338760375976562)),
    Vector((25.96263313293457, -19.09124183654785, 22.338760375976562)),
    Vector((29.332204818725586, -19.970653533935547, 22.338760375976562)),
    Vector((29.639257431030273, -18.801795959472656, 22.338760375976562)),
    Vector((35.34409713745117, -20.304582595825195, 22.338760375976562)),
    Vector((35.1016845703125, -21.261930465698242, 22.338760375976562)),
    Vector((41.87315368652344, -22.998476028442383, 22.338760375976562)),
    Vector((42.10748291015625, -22.05225944519043, 22.338760375976562)),
    Vector((44.29730224609375, -22.631107330322266, 22.338760375976562)),
    Vector((45.32352066040039, -21.974315643310547, 22.338760375976562)),
    Vector((45.96994400024414, -19.447357177734375, 22.338760375976562)),
    Vector((46.939605712890625, -19.6922550201416, 22.338760375976562)),
    Vector((54.486549377441406, 10.074634552001953, 22.338760375976562)),
    Vector((53.51689147949219, 10.31952953338623, 22.338760375976562)),
    Vector((53.783538818359375, 11.388198852539062, 22.338760375976562)),
    Vector((53.41181182861328, 14.738912582397461, 22.338760375976562)),
    Vector((48.57969284057617, 15.406792640686035, 22.338760375976562)),
    Vector((45.331356048583984, 14.404894828796387, 22.338760375976562)),
    Vector((45.04853439331055, 15.3622407913208, 22.338760375976562)),
    Vector((37.695335388183594, 13.080145835876465, 22.338760375976562)),
    Vector((38.11552429199219, 12.167327880859375, 22.338760375976562)),
    Vector((14.10849666595459, 4.608641624450684, 22.338760375976562)),
    Vector((13.833758354187012, 5.465801239013672, 22.338760375976562)),
    Vector((10.981355667114258, 4.530712127685547, 22.338760375976562)),
    Vector((11.26417350769043, 3.6624207496643066, 22.338760375976562)),
    Vector((5.567444324493408, 1.7922461032867432, 22.338760375976562)),
    Vector((5.430075645446777, 2.6828019618988037, 22.338760375976562)),
    Vector((2.569589853286743, 1.7811123132705688, 22.338760375976562)),
    Vector((2.706958055496216, 0.879424512386322, 22.338760375976562)),
    Vector((0.0, 0.0, 22.338760375976562)),
    Vector((28.11195945739746, 1.5807955265045166, 0.0)),
    Vector((39.755897521972656, 5.109682083129883, 0.0)),
    Vector((35.481414794921875, -10.90921688079834, 0.0)),
    Vector((30.067481994628906, -9.495485305786133, 0.0)),
    Vector((30.342214584350586, -8.426816940307617, 0.0)),
    Vector((21.647607803344727, -6.155932903289795, 0.0)),
    Vector((21.36479377746582, -7.2134690284729, 0.0)),
    Vector((15.902384757995605, -5.788594722747803, 0.0)),
    Vector((15.546846389770508, -7.157825469970703, 0.0)),
    Vector((14.771120071411133, -6.957451820373535, 0.0)),
    Vector((15.369070053100586, -4.308046817779541, 0.0)),
    Vector((16.225601196289062, -4.541815757751465, 0.0)),
    Vector((16.750825881958008, -2.359952449798584, 0.0)),
    Vector((28.11195945739746, 1.5807955265045166, 22.338760375976562)),
    Vector((39.755897521972656, 5.109682083129883, 22.338760375976562)),
    Vector((35.481414794921875, -10.90921688079834, 22.338760375976562)),
    Vector((30.067481994628906, -9.495485305786133, 22.338760375976562)),
    Vector((30.342214584350586, -8.426816940307617, 22.338760375976562)),
    Vector((21.647607803344727, -6.155932903289795, 22.338760375976562)),
    Vector((21.36479377746582, -7.2134690284729, 22.338760375976562)),
    Vector((15.902384757995605, -5.788594722747803, 22.338760375976562)),
    Vector((15.546846389770508, -7.157825469970703, 22.338760375976562)),
    Vector((14.771120071411133, -6.957451820373535, 22.338760375976562)),
    Vector((15.369070053100586, -4.308046817779541, 22.338760375976562)),
    Vector((16.225601196289062, -4.541815757751465, 22.338760375976562)),
    Vector((16.750825881958008, -2.359952449798584, 22.338760375976562))
]
unitVectors = [
    Vector((0.9680395722389221, -0.25079724192619324, 0.0)),
    Vector((-0.24078717827796936, -0.9705779552459717, 0.0)),
    Vector((0.9683334231376648, -0.24966061115264893, 0.0)),
    Vector((0.2637067437171936, 0.9646028876304626, 0.0)),
    Vector((0.9683892130851746, -0.2494441717863083, 0.0)),
    Vector((-0.2491597831249237, -0.9684624671936035, 0.0)),
    Vector((0.9666873216629028, -0.2559599280357361, 0.0)),
    Vector((0.24078607559204102, 0.9705782532691956, 0.0)),
    Vector((0.9679400324821472, -0.25118160247802734, 0.0)),
    Vector((-0.25407758355140686, -0.9671838879585266, 0.0)),
    Vector((0.9678834080696106, -0.25139984488487244, 0.0)),
    Vector((0.25407758355140686, 0.9671838879585266, 0.0)),
    Vector((0.9676005244255066, -0.2524860203266144, 0.0)),
    Vector((-0.2478063404560089, -0.9688096046447754, 0.0)),
    Vector((0.9675896763801575, -0.25252753496170044, 0.0)),
    Vector((0.25407424569129944, 0.9671847820281982, 0.0)),
    Vector((0.9670113325119019, -0.254733145236969, 0.0)),
    Vector((-0.24546565115451813, -0.9694052934646606, 0.0)),
    Vector((0.9686545133590698, -0.24841177463531494, 0.0)),
    Vector((0.24038684368133545, 0.9706771373748779, 0.0)),
    Vector((0.9667936563491821, -0.2555582821369171, 0.0)),
    Vector((0.8422669768333435, 0.539060652256012, 0.0)),
    Vector((0.24783042073249817, 0.9688034653663635, 0.0)),
    Vector((0.9695556163787842, -0.24487103521823883, 0.0)),
    Vector((0.24575917422771454, 0.9693309664726257, 0.0)),
    Vector((-0.9695560336112976, 0.24486926198005676, 0.0)),
    Vector((0.24209125339984894, 0.9702534675598145, 0.0)),
    Vector((-0.11026318371295929, 0.9939024448394775, 0.0)),
    Vector((-0.9905827045440674, 0.1369151771068573, 0.0)),
    Vector((-0.9555795788764954, -0.29473331570625305, 0.0)),
    Vector((-0.2833179831504822, 0.9590259790420532, 0.0)),
    Vector((-0.9550616145133972, -0.29640722274780273, 0.0)),
    Vector((0.41814595460891724, -0.908379852771759, 0.0)),
    Vector((-0.9538387060165405, -0.30031904578208923, 0.0)),
    Vector((-0.3052264153957367, 0.9522798657417297, 0.0)),
    Vector((-0.9502418041229248, -0.31151309609413147, 0.0)),
    Vector((0.30970317125320435, -0.9508332014083862, 0.0)),
    Vector((-0.9501112699508667, -0.3119112551212311, 0.0)),
    Vector((-0.15244755148887634, 0.9883115887641907, 0.0)),
    Vector((-0.9537378549575806, -0.30063968896865845, 0.0)),
    Vector((0.1506079137325287, -0.9885935187339783, 0.0)),
    Vector((-0.9510688185691833, -0.3089790344238281, 0.0)),
    Vector((-0.24867770075798035, -0.9685862064361572, 0.0)),
    Vector((0.9570148587226868, 0.2900390625, 0.0)),
    Vector((-0.2578189969062805, -0.9661931991577148, 0.0)),
    Vector((-0.9675561189651489, 0.25265637040138245, 0.0)),
    Vector((0.24898336827754974, 0.9685077667236328, 0.0)),
    Vector((-0.9675431847572327, 0.2527059018611908, 0.0)),
    Vector((-0.25834861397743225, -0.9660517573356628, 0.0)),
    Vector((-0.9676216840744019, 0.25240498781204224, 0.0)),
    Vector((-0.25132817029953003, -0.967901885509491, 0.0)),
    Vector((-0.9682210683822632, 0.2500959038734436, 0.0)),
    Vector((0.22015480697155, 0.9754649996757507, 0.0)),
    Vector((0.964715301990509, -0.26329511404037476, 0.0)),
    Vector((0.23403753340244293, 0.9722275733947754, 0.0)),
    Vector((0.9447789788246155, 0.3277081251144409, 0.0))
]
holesInfo = [
    (99, 13)
]
firstVertIndex = 43
numPolygonVerts = 43
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
