import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((11.84487247467041, 7.603131294250488, 0.0)),
    Vector((5.72270393371582, 16.753585815429688, 0.0)),
    Vector((-0.9945446848869324, 12.25627613067627, 0.0)),
    Vector((-11.176374435424805, 27.484790802001953, 0.0)),
    Vector((-3.7662155628204346, 32.438499450683594, 0.0)),
    Vector((-9.651933670043945, 41.23274612426758, 0.0)),
    Vector((-21.47231674194336, 33.3290901184082, 0.0)),
    Vector((-19.524002075195312, 30.42364501953125, 0.0)),
    Vector((-22.727737426757812, 28.375375747680664, 0.0)),
    Vector((-18.570241928100586, 21.896568298339844, 0.0)),
    Vector((-16.760496139526367, 23.05428695678711, 0.0)),
    Vector((-7.605824947357178, 8.794243812561035, 0.0)),
    Vector((-9.415573120117188, 7.625391483306885, 0.0)),
    Vector((-5.119467735290527, 0.935085654258728, 0.0)),
    Vector((-1.9157239198684692, 2.9833626747131348, 0.0)),
    Vector((0.0, 0.0, 21.799999237060547)),
    Vector((11.84487247467041, 7.603131294250488, 21.799999237060547)),
    Vector((5.72270393371582, 16.753585815429688, 21.799999237060547)),
    Vector((-0.9945446848869324, 12.25627613067627, 21.799999237060547)),
    Vector((-11.176374435424805, 27.484790802001953, 21.799999237060547)),
    Vector((-3.7662155628204346, 32.438499450683594, 21.799999237060547)),
    Vector((-9.651933670043945, 41.23274612426758, 21.799999237060547)),
    Vector((-21.47231674194336, 33.3290901184082, 21.799999237060547)),
    Vector((-19.524002075195312, 30.42364501953125, 21.799999237060547)),
    Vector((-22.727737426757812, 28.375375747680664, 21.799999237060547)),
    Vector((-18.570241928100586, 21.896568298339844, 21.799999237060547)),
    Vector((-16.760496139526367, 23.05428695678711, 21.799999237060547)),
    Vector((-7.605824947357178, 8.794243812561035, 21.799999237060547)),
    Vector((-9.415573120117188, 7.625391483306885, 21.799999237060547)),
    Vector((-5.119467735290527, 0.935085654258728, 21.799999237060547)),
    Vector((-1.9157239198684692, 2.9833626747131348, 21.799999237060547))
]
unitVectors = [
    Vector((0.8415476083755493, 0.5401828289031982, 0.0)),
    Vector((-0.5560743808746338, 0.8311324715614319, 0.0)),
    Vector((-0.8309556245803833, -0.5563386082649231, 0.0)),
    Vector((-0.5558140873908997, 0.8313066363334656, 0.0)),
    Vector((0.8313453197479248, 0.5557562708854675, 0.0)),
    Vector((-0.5561966300010681, 0.8310506939888, 0.0)),
    Vector((-0.8312899470329285, -0.5558390021324158, 0.0)),
    Vector((0.5569446086883545, -0.8305495977401733, 0.0)),
    Vector((-0.8425245881080627, -0.5386578440666199, 0.0)),
    Vector((0.5400723814964294, -0.8416184782981873, 0.0)),
    Vector((0.842380940914154, 0.5388823747634888, 0.0)),
    Vector((0.5402355790138245, -0.8415138721466064, 0.0)),
    Vector((-0.8400274515151978, -0.5425440073013306, 0.0)),
    Vector((0.5403298735618591, -0.8414533138275146, 0.0)),
    Vector((0.8425243496894836, 0.5386582612991333, 0.0)),
    Vector((0.5403280258178711, -0.8414544463157654, 0.0))
]
holesInfo = None
firstVertIndex = 16
numPolygonVerts = 16
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
