import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((-0.23653854429721832, -0.13358338177204132, 0.0)),
    Vector((-1.2333797216415405, -1.4026254415512085, 0.0)),
    Vector((-1.706457257270813, -2.9388344287872314, 0.0)),
    Vector((-1.5966360569000244, -4.541834831237793, 0.0)),
    Vector((-0.9039158225059509, -5.988988399505615, 0.0)),
    Vector((0.2534343898296356, -7.1021833419799805, 0.0)),
    Vector((1.7402496337890625, -7.71444034576416, 0.0)),
    Vector((3.294647216796875, -7.747835636138916, 0.0)),
    Vector((5.634696006774902, -13.247016906738281, 0.0)),
    Vector((0.3632563650608063, -15.484540939331055, 0.0)),
    Vector((3.556536912918091, -22.998605728149414, 0.0)),
    Vector((16.228271484375, -17.61072540283203, 0.0)),
    Vector((1.7824828624725342, 16.375097274780273, 0.0)),
    Vector((-10.889204025268555, 10.987241744995117, 0.0)),
    Vector((-7.721290111541748, 3.528831958770752, 0.0)),
    Vector((-2.449861526489258, 5.777482032775879, 0.0)),
    Vector((0.0, 0.0, 15.904486656188965)),
    Vector((-0.23653854429721832, -0.13358338177204132, 15.904486656188965)),
    Vector((-1.2333797216415405, -1.4026254415512085, 15.904486656188965)),
    Vector((-1.706457257270813, -2.9388344287872314, 15.904486656188965)),
    Vector((-1.5966360569000244, -4.541834831237793, 15.904486656188965)),
    Vector((-0.9039158225059509, -5.988988399505615, 15.904486656188965)),
    Vector((0.2534343898296356, -7.1021833419799805, 15.904486656188965)),
    Vector((1.7402496337890625, -7.71444034576416, 15.904486656188965)),
    Vector((3.294647216796875, -7.747835636138916, 15.904486656188965)),
    Vector((5.634696006774902, -13.247016906738281, 15.904486656188965)),
    Vector((0.3632563650608063, -15.484540939331055, 15.904486656188965)),
    Vector((3.556536912918091, -22.998605728149414, 15.904486656188965)),
    Vector((16.228271484375, -17.61072540283203, 15.904486656188965)),
    Vector((1.7824828624725342, 16.375097274780273, 15.904486656188965)),
    Vector((-10.889204025268555, 10.987241744995117, 15.904486656188965)),
    Vector((-7.721290111541748, 3.528831958770752, 15.904486656188965)),
    Vector((-2.449861526489258, 5.777482032775879, 15.904486656188965))
]
unitVectors = [
    Vector((-0.8707399368286133, -0.49174389243125916, 0.0)),
    Vector((-0.6177207231521606, -0.7863975763320923, 0.0)),
    Vector((-0.2943119406700134, -0.9557093977928162, 0.0)),
    Vector((0.06834956258535385, -0.9976614713668823, 0.0)),
    Vector((0.4317615032196045, -0.9019877910614014, 0.0)),
    Vector((0.7207216024398804, -0.6932246088981628, 0.0)),
    Vector((0.9246695637702942, -0.3807705342769623, 0.0)),
    Vector((0.9997693300247192, -0.021479438990354538, 0.0)),
    Vector((0.39155110716819763, -0.9201562404632568, 0.0)),
    Vector((-0.9205092191696167, -0.3907208740711212, 0.0)),
    Vector((0.39112019538879395, -0.9203395843505859, 0.0)),
    Vector((0.9202683568000793, 0.39128783345222473, 0.0)),
    Vector((-0.39118221402168274, 0.9203132390975952, 0.0)),
    Vector((-0.9202684760093689, -0.39128756523132324, 0.0)),
    Vector((0.39094096422195435, -0.9204158186912537, 0.0)),
    Vector((0.9198091626167297, 0.3923659324645996, 0.0)),
    Vector((0.39038896560668945, -0.920650064945221, 0.0))
]
holesInfo = None
firstVertIndex = 17
numPolygonVerts = 17
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
