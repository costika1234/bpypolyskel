import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((4.6752610206604, 2.415634870529175, 0.0)),
    Vector((-44.50567626953125, 97.42699432373047, 0.0)),
    Vector((-49.180877685546875, 95.01140594482422, 0.0)),
    Vector((-61.54533767700195, 118.90068817138672, 0.0)),
    Vector((-102.86861419677734, 97.50569152832031, 0.0)),
    Vector((-94.9891128540039, 82.27704620361328, 0.0)),
    Vector((-64.79405212402344, 97.90586853027344, 0.0)),
    Vector((-45.70586395263672, 61.014400482177734, 0.0)),
    Vector((-49.5762825012207, 59.01068115234375, 0.0)),
    Vector((-29.617206573486328, 20.460601806640625, 0.0)),
    Vector((-25.746767044067383, 22.453201293945312, 0.0)),
    Vector((-6.658060073852539, -14.427001953125, 0.0)),
    Vector((-36.84624481201172, -30.056140899658203, 0.0)),
    Vector((-28.959062576293945, -45.28469467163086, 0.0)),
    Vector((12.364989280700684, -23.889148712158203, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((4.6752610206604, 2.415634870529175, 27.57906723022461)),
    Vector((-44.50567626953125, 97.42699432373047, 27.57906723022461)),
    Vector((-49.180877685546875, 95.01140594482422, 27.57906723022461)),
    Vector((-61.54533767700195, 118.90068817138672, 27.57906723022461)),
    Vector((-102.86861419677734, 97.50569152832031, 27.57906723022461)),
    Vector((-94.9891128540039, 82.27704620361328, 27.57906723022461)),
    Vector((-64.79405212402344, 97.90586853027344, 27.57906723022461)),
    Vector((-45.70586395263672, 61.014400482177734, 27.57906723022461)),
    Vector((-49.5762825012207, 59.01068115234375, 27.57906723022461)),
    Vector((-29.617206573486328, 20.460601806640625, 27.57906723022461)),
    Vector((-25.746767044067383, 22.453201293945312, 27.57906723022461)),
    Vector((-6.658060073852539, -14.427001953125, 27.57906723022461)),
    Vector((-36.84624481201172, -30.056140899658203, 27.57906723022461)),
    Vector((-28.959062576293945, -45.28469467163086, 27.57906723022461)),
    Vector((12.364989280700684, -23.889148712158203, 27.57906723022461)),
    Vector((0.0, 0.0, 27.57906723022461))
]
unitVectors = [
    Vector((-0.4596967101097107, 0.8880759477615356, 0.0)),
    Vector((-0.8884207010269165, -0.4590302109718323, 0.0)),
    Vector((-0.45965561270713806, 0.8880972266197205, 0.0)),
    Vector((-0.888034462928772, -0.4597770571708679, 0.0)),
    Vector((0.45954325795173645, -0.8881553411483765, 0.0)),
    Vector((0.8880893588066101, 0.45967090129852295, 0.0)),
    Vector((0.4595443606376648, -0.8881548047065735, 0.0)),
    Vector((-0.8880510330200195, -0.4597448706626892, 0.0)),
    Vector((0.45977506041526794, -0.8880353569984436, 0.0)),
    Vector((0.889092743396759, 0.4577272832393646, 0.0)),
    Vector((0.4596649408340454, -0.8880924582481384, 0.0)),
    Vector((-0.8880428075790405, -0.4597608149051666, 0.0)),
    Vector((0.4598987400531769, -0.8879714608192444, 0.0)),
    Vector((0.8880330920219421, 0.4597795307636261, 0.0)),
    Vector((-0.4596731662750244, 0.8880881667137146, 0.0)),
    Vector((0.888419508934021, 0.4590325653553009, 0.0))
]
holesInfo = None
firstVertIndex = 16
numPolygonVerts = 16
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
