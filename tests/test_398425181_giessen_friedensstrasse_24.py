import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((-6.283834934234619, -5.810873508453369, 0.0)),
    Vector((-4.0078020095825195, -8.271037101745605, 0.0)),
    Vector((-4.721714496612549, -9.028008460998535, 0.0)),
    Vector((-5.060999870300293, -9.517813682556152, 0.0)),
    Vector((-5.202369213104248, -10.130070686340332, 0.0)),
    Vector((-5.0680694580078125, -10.820252418518066, 0.0)),
    Vector((-4.820674896240234, -11.221002578735352, 0.0)),
    Vector((-4.24813175201416, -11.65514850616455, 0.0)),
    Vector((-3.576630115509033, -11.799864768981934, 0.0)),
    Vector((-2.890991449356079, -11.644018173217773, 0.0)),
    Vector((-2.403269052505493, -11.287796020507812, 0.0)),
    Vector((-1.8165884017944336, -10.675539016723633, 0.0)),
    Vector((0.4029011130332947, -13.04664421081543, 0.0)),
    Vector((6.686737060546875, -7.235762596130371, 0.0)),
    Vector((0.0, 0.0, 5.904050350189209)),
    Vector((-6.283834934234619, -5.810873508453369, 5.904050350189209)),
    Vector((-4.0078020095825195, -8.271037101745605, 5.904050350189209)),
    Vector((-4.721714496612549, -9.028008460998535, 5.904050350189209)),
    Vector((-5.060999870300293, -9.517813682556152, 5.904050350189209)),
    Vector((-5.202369213104248, -10.130070686340332, 5.904050350189209)),
    Vector((-5.0680694580078125, -10.820252418518066, 5.904050350189209)),
    Vector((-4.820674896240234, -11.221002578735352, 5.904050350189209)),
    Vector((-4.24813175201416, -11.65514850616455, 5.904050350189209)),
    Vector((-3.576630115509033, -11.799864768981934, 5.904050350189209)),
    Vector((-2.890991449356079, -11.644018173217773, 5.904050350189209)),
    Vector((-2.403269052505493, -11.287796020507812, 5.904050350189209)),
    Vector((-1.8165884017944336, -10.675539016723633, 5.904050350189209)),
    Vector((0.4029011130332947, -13.04664421081543, 5.904050350189209)),
    Vector((6.686737060546875, -7.235762596130371, 5.904050350189209))
]
unitVectors = [
    Vector((-0.7341969609260559, -0.6789366006851196, 0.0)),
    Vector((0.6791033148765564, -0.7340427041053772, 0.0)),
    Vector((-0.6861129403114319, -0.7274951338768005, 0.0)),
    Vector((-0.5694249272346497, -0.8220433592796326, 0.0)),
    Vector((-0.2249792516231537, -0.9743634462356567, 0.0)),
    Vector((0.19100360572338104, -0.9815892577171326, 0.0)),
    Vector((0.5252967476844788, -0.8509190678596497, 0.0)),
    Vector((0.7968233227729797, -0.6042122840881348, 0.0)),
    Vector((0.9775562882423401, -0.21067452430725098, 0.0)),
    Vector((0.9751268029212952, 0.22164763510227203, 0.0)),
    Vector((0.8075412511825562, 0.5898110866546631, 0.0)),
    Vector((0.6918649673461914, 0.7220268249511719, 0.0)),
    Vector((0.6833801865577698, -0.7300626039505005, 0.0)),
    Vector((0.7341964840888977, 0.6789370179176331, 0.0)),
    Vector((-0.6786949038505554, 0.7344202995300293, 0.0))
]
holesInfo = None
firstVertIndex = 15
numPolygonVerts = 15
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
