import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((-0.1736338585615158, -9.874038696289062, 0.0)),
    Vector((1.533766269683838, -11.63288688659668, 0.0)),
    Vector((17.681720733642578, -11.866628646850586, 0.0)),
    Vector((19.43975830078125, -10.163434982299805, 0.0)),
    Vector((19.577184677124023, -0.5231664776802063, 0.0)),
    Vector((20.821552276611328, 0.6790886521339417, 0.0)),
    Vector((20.90111541748047, 5.933368682861328, 0.0)),
    Vector((19.678442001342773, 7.180142879486084, 0.0)),
    Vector((19.815866470336914, 16.820411682128906, 0.0)),
    Vector((18.144643783569336, 18.5681209564209, 0.0)),
    Vector((2.054656505584717, 18.8129940032959, 0.0)),
    Vector((0.31109246611595154, 17.09867286682129, 0.0)),
    Vector((0.13745971024036407, 7.246898651123047, 0.0)),
    Vector((-1.1213821172714233, 6.0335164070129395, 0.0)),
    Vector((-1.2009650468826294, 1.2579103708267212, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((-0.1736338585615158, -9.874038696289062, 10.769655227661133)),
    Vector((1.533766269683838, -11.63288688659668, 10.769655227661133)),
    Vector((17.681720733642578, -11.866628646850586, 10.769655227661133)),
    Vector((19.43975830078125, -10.163434982299805, 10.769655227661133)),
    Vector((19.577184677124023, -0.5231664776802063, 10.769655227661133)),
    Vector((20.821552276611328, 0.6790886521339417, 10.769655227661133)),
    Vector((20.90111541748047, 5.933368682861328, 10.769655227661133)),
    Vector((19.678442001342773, 7.180142879486084, 10.769655227661133)),
    Vector((19.815866470336914, 16.820411682128906, 10.769655227661133)),
    Vector((18.144643783569336, 18.5681209564209, 10.769655227661133)),
    Vector((2.054656505584717, 18.8129940032959, 10.769655227661133)),
    Vector((0.31109246611595154, 17.09867286682129, 10.769655227661133)),
    Vector((0.13745971024036407, 7.246898651123047, 10.769655227661133)),
    Vector((-1.1213821172714233, 6.0335164070129395, 10.769655227661133)),
    Vector((-1.2009650468826294, 1.2579103708267212, 10.769655227661133)),
    Vector((0.0, 0.0, 10.769655227661133))
]
unitVectors = [
    Vector((0.6965348124504089, -0.7175230979919434, 0.0)),
    Vector((0.9998952150344849, -0.014473490417003632, 0.0)),
    Vector((0.7182208895683289, 0.6958152055740356, 0.0)),
    Vector((0.014254002831876278, 0.9998984336853027, 0.0)),
    Vector((0.7191712856292725, 0.6948327422142029, 0.0)),
    Vector((0.015140803530812263, 0.9998853802680969, 0.0)),
    Vector((-0.7001723051071167, 0.7139738202095032, 0.0)),
    Vector((0.01425380539149046, 0.9998984336853027, 0.0)),
    Vector((-0.6911147832870483, 0.7227449417114258, 0.0)),
    Vector((-0.9998841881752014, 0.015217209234833717, 0.0)),
    Vector((-0.7130612134933472, -0.7011018395423889, 0.0)),
    Vector((-0.017621779814362526, -0.9998447299003601, 0.0)),
    Vector((-0.7199875116348267, -0.6939871311187744, 0.0)),
    Vector((-0.016662154346704483, -0.9998611807823181, 0.0)),
    Vector((0.6905457377433777, -0.7232888340950012, 0.0)),
    Vector((-0.01758216880261898, -0.9998453855514526, 0.0))
]
holesInfo = None
firstVertIndex = 16
numPolygonVerts = 16
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
