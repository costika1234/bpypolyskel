import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((1.715977430343628, 1.1131953001022339, 0.0)),
    Vector((2.616260290145874, 2.7829880714416504, 0.0)),
    Vector((2.7008495330810547, 4.408252716064453, 0.0)),
    Vector((2.0482945442199707, 6.155968189239502, 0.0)),
    Vector((-4.501406669616699, 12.712688446044922, 0.0)),
    Vector((-6.338221549987793, 13.358344078063965, 0.0)),
    Vector((-8.005857467651367, 13.180235862731934, 0.0)),
    Vector((-9.691620826721191, 12.256287574768066, 0.0)),
    Vector((-10.724834442138672, 10.519705772399902, 0.0)),
    Vector((-10.869850158691406, 8.794254302978516, 0.0)),
    Vector((-10.108542442321777, 7.135591983795166, 0.0)),
    Vector((-3.480292558670044, 0.5899947881698608, 0.0)),
    Vector((-1.9214118719100952, -0.1335829347372055, 0.0)),
    Vector((0.0, 0.0, 2.929697275161743)),
    Vector((1.715977430343628, 1.1131953001022339, 2.929697275161743)),
    Vector((2.616260290145874, 2.7829880714416504, 2.929697275161743)),
    Vector((2.7008495330810547, 4.408252716064453, 2.929697275161743)),
    Vector((2.0482945442199707, 6.155968189239502, 2.929697275161743)),
    Vector((-4.501406669616699, 12.712688446044922, 2.929697275161743)),
    Vector((-6.338221549987793, 13.358344078063965, 2.929697275161743)),
    Vector((-8.005857467651367, 13.180235862731934, 2.929697275161743)),
    Vector((-9.691620826721191, 12.256287574768066, 2.929697275161743)),
    Vector((-10.724834442138672, 10.519705772399902, 2.929697275161743)),
    Vector((-10.869850158691406, 8.794254302978516, 2.929697275161743)),
    Vector((-10.108542442321777, 7.135591983795166, 2.929697275161743)),
    Vector((-3.480292558670044, 0.5899947881698608, 2.929697275161743)),
    Vector((-1.9214118719100952, -0.1335829347372055, 2.929697275161743))
]
unitVectors = [
    Vector((0.838932454586029, 0.5442354083061218, 0.0)),
    Vector((0.4745752811431885, 0.8802148699760437, 0.0)),
    Vector((0.051976095885038376, 0.9986484050750732, 0.0)),
    Vector((-0.34978923201560974, 0.9368284344673157, 0.0)),
    Vector((-0.7067279815673828, 0.7074853777885437, 0.0)),
    Vector((-0.9434138536453247, 0.3316177725791931, 0.0)),
    Vector((-0.9943450093269348, -0.10619884729385376, 0.0)),
    Vector((-0.8769226670265198, -0.48063161969184875, 0.0)),
    Vector((-0.5113135576248169, -0.8593942523002625, 0.0)),
    Vector((-0.08374981582164764, -0.9964867830276489, 0.0)),
    Vector((0.41714707016944885, -0.9088389277458191, 0.0)),
    Vector((0.7115291357040405, -0.7026565074920654, 0.0)),
    Vector((0.9070507884025574, -0.42102116346359253, 0.0)),
    Vector((0.9975919127464294, 0.06935590505599976, 0.0))
]
holesInfo = None
firstVertIndex = 14
numPolygonVerts = 14
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
