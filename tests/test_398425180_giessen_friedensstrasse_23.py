import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((-6.283809185028076, -5.799741744995117, 0.0)),
    Vector((-4.007785797119141, -8.259904861450195, 0.0)),
    Vector((-4.721695423126221, -9.028008460998535, 0.0)),
    Vector((-5.06097936630249, -9.517813682556152, 0.0)),
    Vector((-5.202347755432129, -10.118939399719238, 0.0)),
    Vector((-5.06804895401001, -10.820252418518066, 0.0)),
    Vector((-4.82065486907959, -11.221002578735352, 0.0)),
    Vector((-4.248114109039307, -11.65514850616455, 0.0)),
    Vector((-3.583683729171753, -11.799864768981934, 0.0)),
    Vector((-2.890979528427124, -11.644018173217773, 0.0)),
    Vector((-2.403259038925171, -11.287796020507812, 0.0)),
    Vector((-1.816580891609192, -10.675539016723633, 0.0)),
    Vector((0.40289944410324097, -13.03551197052002, 0.0)),
    Vector((6.686709880828857, -7.235762596130371, 0.0)),
    Vector((0.0, 0.0, 6.276576995849609)),
    Vector((-6.283809185028076, -5.799741744995117, 6.276576995849609)),
    Vector((-4.007785797119141, -8.259904861450195, 6.276576995849609)),
    Vector((-4.721695423126221, -9.028008460998535, 6.276576995849609)),
    Vector((-5.06097936630249, -9.517813682556152, 6.276576995849609)),
    Vector((-5.202347755432129, -10.118939399719238, 6.276576995849609)),
    Vector((-5.06804895401001, -10.820252418518066, 6.276576995849609)),
    Vector((-4.82065486907959, -11.221002578735352, 6.276576995849609)),
    Vector((-4.248114109039307, -11.65514850616455, 6.276576995849609)),
    Vector((-3.583683729171753, -11.799864768981934, 6.276576995849609)),
    Vector((-2.890979528427124, -11.644018173217773, 6.276576995849609)),
    Vector((-2.403259038925171, -11.287796020507812, 6.276576995849609)),
    Vector((-1.816580891609192, -10.675539016723633, 6.276576995849609)),
    Vector((0.40289944410324097, -13.03551197052002, 6.276576995849609)),
    Vector((6.686709880828857, -7.235762596130371, 6.276576995849609))
]
unitVectors = [
    Vector((-0.7348440885543823, -0.6782360672950745, 0.0)),
    Vector((0.6791018843650818, -0.7340440154075623, 0.0)),
    Vector((-0.680794358253479, -0.7324745059013367, 0.0)),
    Vector((-0.569423258304596, -0.8220444917678833, 0.0)),
    Vector((-0.2289274036884308, -0.9734435677528381, 0.0)),
    Vector((0.18807879090309143, -0.9821539521217346, 0.0)),
    Vector((0.5252960324287415, -0.8509195446968079, 0.0)),
    Vector((0.7968221306800842, -0.6042138934135437, 0.0)),
    Vector((0.9770923852920532, -0.21281561255455017, 0.0)),
    Vector((0.9756132960319519, 0.21949630975723267, 0.0)),
    Vector((0.8075401186943054, 0.5898125767707825, 0.0)),
    Vector((0.691863477230072, 0.722028374671936, 0.0)),
    Vector((0.6850911974906921, -0.7284573316574097, 0.0)),
    Vector((0.7348437309265137, 0.6782364845275879, 0.0)),
    Vector((-0.678693413734436, 0.7344216108322144, 0.0))
]
holesInfo = None
firstVertIndex = 15
numPolygonVerts = 15
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
