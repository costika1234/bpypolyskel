import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((2.8457188606262207, 1.6586612462997437, 0.0)),
    Vector((4.768691539764404, 2.3154475688934326, 0.0)),
    Vector((8.114526748657227, 0.2783050537109375, 0.0)),
    Vector((12.81279182434082, -3.695791244506836, 0.0)),
    Vector((19.962295532226562, 1.63643479347229, 0.0)),
    Vector((16.095190048217773, 10.519716262817383, 0.0)),
    Vector((27.020143508911133, 20.471723556518555, 0.0)),
    Vector((25.77337646484375, 22.263961791992188, 0.0)),
    Vector((28.90082359313965, 24.813194274902344, 0.0)),
    Vector((29.66155242919922, 25.603567123413086, 0.0)),
    Vector((30.175745010375977, 26.538654327392578, 0.0)),
    Vector((30.11234474182129, 27.65184783935547, 0.0)),
    Vector((29.675621032714844, 28.709381103515625, 0.0)),
    Vector((28.914884567260742, 29.577669143676758, 0.0)),
    Vector((27.837177276611328, 30.011808395385742, 0.0)),
    Vector((26.7735595703125, 29.956144332885742, 0.0)),
    Vector((25.709945678710938, 29.521991729736328, 0.0)),
    Vector((22.202131271362305, 27.373510360717773, 0.0)),
    Vector((20.772228240966797, 29.421783447265625, 0.0)),
    Vector((7.860915184020996, 22.052396774291992, 0.0)),
    Vector((0.38036638498306274, 28.79835319519043, 0.0)),
    Vector((-6.7902512550354, 23.499549865722656, 0.0)),
    Vector((-2.599177598953247, 14.0485200881958, 0.0)),
    Vector((-4.8320770263671875, 12.32306957244873, 0.0)),
    Vector((-7.269250392913818, 9.951967239379883, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((2.8457188606262207, 1.6586612462997437, 8.0)),
    Vector((4.768691539764404, 2.3154475688934326, 8.0)),
    Vector((8.114526748657227, 0.2783050537109375, 8.0)),
    Vector((12.81279182434082, -3.695791244506836, 8.0)),
    Vector((19.962295532226562, 1.63643479347229, 8.0)),
    Vector((16.095190048217773, 10.519716262817383, 8.0)),
    Vector((27.020143508911133, 20.471723556518555, 8.0)),
    Vector((25.77337646484375, 22.263961791992188, 8.0)),
    Vector((28.90082359313965, 24.813194274902344, 8.0)),
    Vector((29.66155242919922, 25.603567123413086, 8.0)),
    Vector((30.175745010375977, 26.538654327392578, 8.0)),
    Vector((30.11234474182129, 27.65184783935547, 8.0)),
    Vector((29.675621032714844, 28.709381103515625, 8.0)),
    Vector((28.914884567260742, 29.577669143676758, 8.0)),
    Vector((27.837177276611328, 30.011808395385742, 8.0)),
    Vector((26.7735595703125, 29.956144332885742, 8.0)),
    Vector((25.709945678710938, 29.521991729736328, 8.0)),
    Vector((22.202131271362305, 27.373510360717773, 8.0)),
    Vector((20.772228240966797, 29.421783447265625, 8.0)),
    Vector((7.860915184020996, 22.052396774291992, 8.0)),
    Vector((0.38036638498306274, 28.79835319519043, 8.0)),
    Vector((-6.7902512550354, 23.499549865722656, 8.0)),
    Vector((-2.599177598953247, 14.0485200881958, 8.0)),
    Vector((-4.8320770263671875, 12.32306957244873, 8.0)),
    Vector((-7.269250392913818, 9.951967239379883, 8.0)),
    Vector((0.0, 0.0, 8.0)),
]
unitVectors = [
    Vector((0.9463256001472473, 0.3232150375843048, 0.0)),
    Vector((0.8541365265846252, -0.5200488567352295, 0.0)),
    Vector((0.763495147228241, -0.645813524723053, 0.0)),
    Vector((0.8016064167022705, 0.5978521704673767, 0.0)),
    Vector((-0.3991434872150421, 0.916888415813446, 0.0)),
    Vector((0.7392582297325134, 0.6734219789505005, 0.0)),
    Vector((-0.5710622072219849, 0.8209067583084106, 0.0)),
    Vector((0.7751206159591675, 0.6318132877349854, 0.0)),
    Vector((0.6934662461280823, 0.7204892039299011, 0.0)),
    Vector((0.48184290528297424, 0.8762575387954712, 0.0)),
    Vector((-0.05686135217547417, 0.998382031917572, 0.0)),
    Vector((-0.3816978335380554, 0.9242872595787048, 0.0)),
    Vector((-0.6589874625205994, 0.7521539330482483, 0.0)),
    Vector((-0.9275668263435364, 0.3736572563648224, 0.0)),
    Vector((-0.9986333847045898, -0.052263129502534866, 0.0)),
    Vector((-0.9258402585983276, -0.37791529297828674, 0.0)),
    Vector((-0.852760374546051, -0.5223023295402527, 0.0)),
    Vector((-0.5724172592163086, 0.8199624419212341, 0.0)),
    Vector((-0.8684895038604736, -0.49570754170417786, 0.0)),
    Vector((-0.7426292896270752, 0.6697028279304504, 0.0)),
    Vector((-0.804241418838501, -0.5943026542663574, 0.0)),
    Vector((0.40538039803504944, -0.914148211479187, 0.0)),
    Vector((-0.7912801504135132, -0.6114537715911865, 0.0)),
    Vector((-0.7167555689811707, -0.6973245739936829, 0.0)),
    Vector((0.5898398756980896, -0.80752032995224, 0.0)),
    Vector((0.8639561533927917, 0.5035671591758728, 0.0)),
]
holesInfo = None
firstVertIndex = 26
numPolygonVerts = 26
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(
        verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors
    )


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
