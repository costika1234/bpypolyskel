import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((-6.283867835998535, -5.799741744995117, 0.0)),
    Vector((-4.0078229904174805, -8.259904861450195, 0.0)),
    Vector((-4.721739292144775, -9.028008460998535, 0.0)),
    Vector((-5.061026573181152, -9.517813682556152, 0.0)),
    Vector((-5.202396869659424, -10.118939399719238, 0.0)),
    Vector((-5.068096160888672, -10.820252418518066, 0.0)),
    Vector((-4.820700168609619, -11.221002578735352, 0.0)),
    Vector((-4.248154163360596, -11.65514850616455, 0.0)),
    Vector((-3.5766489505767822, -11.799864768981934, 0.0)),
    Vector((-2.8910067081451416, -11.644018173217773, 0.0)),
    Vector((-2.4032816886901855, -11.287796020507812, 0.0)),
    Vector((-1.8165979385375977, -10.675539016723633, 0.0)),
    Vector((0.4029032289981842, -13.03551197052002, 0.0)),
    Vector((6.686772346496582, -7.235762596130371, 0.0)),
    Vector((0.0, 0.0, 6.3925933837890625)),
    Vector((-6.283867835998535, -5.799741744995117, 6.3925933837890625)),
    Vector((-4.0078229904174805, -8.259904861450195, 6.3925933837890625)),
    Vector((-4.721739292144775, -9.028008460998535, 6.3925933837890625)),
    Vector((-5.061026573181152, -9.517813682556152, 6.3925933837890625)),
    Vector((-5.202396869659424, -10.118939399719238, 6.3925933837890625)),
    Vector((-5.068096160888672, -10.820252418518066, 6.3925933837890625)),
    Vector((-4.820700168609619, -11.221002578735352, 6.3925933837890625)),
    Vector((-4.248154163360596, -11.65514850616455, 6.3925933837890625)),
    Vector((-3.5766489505767822, -11.799864768981934, 6.3925933837890625)),
    Vector((-2.8910067081451416, -11.644018173217773, 6.3925933837890625)),
    Vector((-2.4032816886901855, -11.287796020507812, 6.3925933837890625)),
    Vector((-1.8165979385375977, -10.675539016723633, 6.3925933837890625)),
    Vector((0.4029032289981842, -13.03551197052002, 6.3925933837890625)),
    Vector((6.686772346496582, -7.235762596130371, 6.3925933837890625))
]
unitVectors = [
    Vector((-0.7348472476005554, -0.6782326698303223, 0.0)),
    Vector((0.6791053414344788, -0.7340408563613892, 0.0)),
    Vector((-0.680797815322876, -0.7324713468551636, 0.0)),
    Vector((-0.5694270730018616, -0.8220418691635132, 0.0)),
    Vector((-0.2289303094148636, -0.973442792892456, 0.0)),
    Vector((0.18808136880397797, -0.9821534752845764, 0.0)),
    Vector((0.5252989530563354, -0.8509176969528198, 0.0)),
    Vector((0.7968248724937439, -0.6042104363441467, 0.0)),
    Vector((0.9775565266609192, -0.21067345142364502, 0.0)),
    Vector((0.975127100944519, 0.22164654731750488, 0.0)),
    Vector((0.8075428009033203, 0.5898090600967407, 0.0)),
    Vector((0.6918668746948242, 0.7220250368118286, 0.0)),
    Vector((0.6850945949554443, -0.728454053401947, 0.0)),
    Vector((0.734846830368042, 0.6782330274581909, 0.0)),
    Vector((-0.678696870803833, 0.734418511390686, 0.0))
]
holesInfo = None
firstVertIndex = 15
numPolygonVerts = 15
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
