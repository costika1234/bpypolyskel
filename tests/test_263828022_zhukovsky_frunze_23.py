import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((2.339867353439331, 1.113195538520813, 0.0)),
    Vector((4.440713405609131, 4.085427761077881, 0.0)),
    Vector((-3.8117027282714844, 20.282413482666016, 0.0)),
    Vector((-8.16434097290039, 20.026384353637695, 0.0)),
    Vector((-13.397578239440918, 17.37699317932129, 0.0)),
    Vector((-14.951201438903809, 15.328719139099121, 0.0)),
    Vector((-31.173030853271484, 7.046635150909424, 0.0)),
    Vector((-33.68272399902344, 7.01325798034668, 0.0)),
    Vector((-38.94744110107422, 4.363897800445557, 0.0)),
    Vector((-43.853660583496094, -0.5229814648628235, 0.0)),
    Vector((-35.8592414855957, -16.43060874938965, 0.0)),
    Vector((-30.280012130737305, -15.350852966308594, 0.0)),
    Vector((-24.417724609375, -12.334131240844727, 0.0)),
    Vector((-23.27293586730957, -10.419442176818848, 0.0)),
    Vector((-6.340290546417236, -2.037142038345337, 0.0)),
    Vector((-4.302340030670166, -2.048276424407959, 0.0)),
    Vector((2.339867353439331, 1.113195538520813, 8.675106048583984)),
    Vector((4.440713405609131, 4.085427761077881, 8.675106048583984)),
    Vector((-3.8117027282714844, 20.282413482666016, 8.675106048583984)),
    Vector((-8.16434097290039, 20.026384353637695, 8.675106048583984)),
    Vector((-13.397578239440918, 17.37699317932129, 8.675106048583984)),
    Vector((-14.951201438903809, 15.328719139099121, 8.675106048583984)),
    Vector((-31.173030853271484, 7.046635150909424, 8.675106048583984)),
    Vector((-33.68272399902344, 7.01325798034668, 8.675106048583984)),
    Vector((-38.94744110107422, 4.363897800445557, 8.675106048583984)),
    Vector((-43.853660583496094, -0.5229814648628235, 8.675106048583984)),
    Vector((-35.8592414855957, -16.43060874938965, 8.675106048583984)),
    Vector((-30.280012130737305, -15.350852966308594, 8.675106048583984)),
    Vector((-24.417724609375, -12.334131240844727, 8.675106048583984)),
    Vector((-23.27293586730957, -10.419442176818848, 8.675106048583984)),
    Vector((-6.340290546417236, -2.037142038345337, 8.675106048583984)),
    Vector((-4.302340030670166, -2.048276424407959, 8.675106048583984)),
]
unitVectors = [
    Vector((0.577196478843689, 0.8166053295135498, 0.0)),
    Vector((-0.45397478342056274, 0.8910144567489624, 0.0)),
    Vector((-0.9982744455337524, -0.058720096945762634, 0.0)),
    Vector((-0.8921811580657959, -0.45167776942253113, 0.0)),
    Vector((-0.6043272614479065, -0.7967362403869629, 0.0)),
    Vector((-0.8906364440917969, -0.4547160267829895, 0.0)),
    Vector((-0.9999116063117981, -0.013298127800226212, 0.0)),
    Vector((-0.8932702541351318, -0.4495198130607605, 0.0)),
    Vector((-0.7085018754005432, -0.7057090401649475, 0.0)),
    Vector((0.4490372836589813, -0.893513023853302, 0.0)),
    Vector((0.9817829728126526, 0.19000579416751862, 0.0)),
    Vector((0.88917475938797, 0.45756760239601135, 0.0)),
    Vector((0.5131685733795166, 0.8582878112792969, 0.0)),
    Vector((0.8961989879608154, 0.4436523914337158, 0.0)),
    Vector((0.9999851584434509, -0.00546344043686986, 0.0)),
    Vector((0.9029387831687927, 0.4297691285610199, 0.0)),
]
holesInfo = None
firstVertIndex = 16
numPolygonVerts = 16
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(
        verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors
    )


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
