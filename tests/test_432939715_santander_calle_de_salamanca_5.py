import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((6.237782001495361, 3.38411545753479, 0.0)),
    Vector((6.472103118896484, 2.938837766647339, 0.0)),
    Vector((15.263164520263672, 7.703326225280762, 0.0)),
    Vector((15.02076244354248, 8.148603439331055, 0.0)),
    Vector((20.30508804321289, 10.998395919799805, 0.0)),
    Vector((20.5474910736084, 10.564250946044922, 0.0)),
    Vector((29.33045196533203, 15.328758239746094, 0.0)),
    Vector((29.09613037109375, 15.77403450012207, 0.0)),
    Vector((34.34812545776367, 18.623838424682617, 0.0)),
    Vector((34.59860610961914, 18.17856216430664, 0.0)),
    Vector((43.38154602050781, 22.943086624145508, 0.0)),
    Vector((43.14722442626953, 23.388362884521484, 0.0)),
    Vector((45.522735595703125, 24.66855239868164, 0.0)),
    Vector((41.676612854003906, 31.81523895263672, 0.0)),
    Vector((-14.277414321899414, 1.4360365867614746, 0.0)),
    Vector((-8.968842506408691, -4.8535237312316895, 0.0)),
    Vector((-7.037712574005127, -3.8182549476623535, 0.0)),
    Vector((-6.803391933441162, -4.252400875091553, 0.0)),
    Vector((0.22624093294143677, -0.44527795910835266, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((6.237782001495361, 3.38411545753479, 12.23648738861084)),
    Vector((6.472103118896484, 2.938837766647339, 12.23648738861084)),
    Vector((15.263164520263672, 7.703326225280762, 12.23648738861084)),
    Vector((15.02076244354248, 8.148603439331055, 12.23648738861084)),
    Vector((20.30508804321289, 10.998395919799805, 12.23648738861084)),
    Vector((20.5474910736084, 10.564250946044922, 12.23648738861084)),
    Vector((29.33045196533203, 15.328758239746094, 12.23648738861084)),
    Vector((29.09613037109375, 15.77403450012207, 12.23648738861084)),
    Vector((34.34812545776367, 18.623838424682617, 12.23648738861084)),
    Vector((34.59860610961914, 18.17856216430664, 12.23648738861084)),
    Vector((43.38154602050781, 22.943086624145508, 12.23648738861084)),
    Vector((43.14722442626953, 23.388362884521484, 12.23648738861084)),
    Vector((45.522735595703125, 24.66855239868164, 12.23648738861084)),
    Vector((41.676612854003906, 31.81523895263672, 12.23648738861084)),
    Vector((-14.277414321899414, 1.4360365867614746, 12.23648738861084)),
    Vector((-8.968842506408691, -4.8535237312316895, 12.23648738861084)),
    Vector((-7.037712574005127, -3.8182549476623535, 12.23648738861084)),
    Vector((-6.803391933441162, -4.252400875091553, 12.23648738861084)),
    Vector((0.22624093294143677, -0.44527795910835266, 12.23648738861084)),
    Vector((0.0, 0.0, 12.23648738861084))
]
unitVectors = [
    Vector((0.46569108963012695, -0.8849473595619202, 0.0)),
    Vector((0.8791804313659668, 0.4764890968799591, 0.0)),
    Vector((-0.47812777757644653, 0.8782903552055359, 0.0)),
    Vector((0.8801659941673279, 0.47466611862182617, 0.0)),
    Vector((0.4875034987926483, -0.8731210827827454, 0.0)),
    Vector((0.878995418548584, 0.4768300950527191, 0.0)),
    Vector((-0.46569299697875977, 0.884946346282959, 0.0)),
    Vector((0.8789432048797607, 0.4769265055656433, 0.0)),
    Vector((0.4902801811695099, -0.8715648651123047, 0.0)),
    Vector((0.8789942264556885, 0.4768323302268982, 0.0)),
    Vector((-0.46569299697875977, 0.884946346282959, 0.0)),
    Vector((0.8803057670593262, 0.4744066298007965, 0.0)),
    Vector((-0.4738999009132385, 0.8805787563323975, 0.0)),
    Vector((-0.8788259625434875, -0.4771422743797302, 0.0)),
    Vector((0.6449955105781555, -0.7641863822937012, 0.0)),
    Vector((0.8813403248786926, 0.47248199582099915, 0.0)),
    Vector((0.4749634563922882, -0.8800054788589478, 0.0)),
    Vector((0.8793231248855591, 0.4762255847454071, 0.0)),
    Vector((-0.45297369360923767, 0.8915238976478577, 0.0)),
    Vector((0.8789780139923096, 0.4768623113632202, 0.0))
]
holesInfo = None
firstVertIndex = 20
numPolygonVerts = 20
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
