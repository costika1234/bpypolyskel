import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((8.221580505371094, 0.4675513505935669, 0.0)),
    Vector((8.053454399108887, 3.3841216564178467, 0.0)),
    Vector((10.689129829406738, 3.528843879699707, 0.0)),
    Vector((10.271522521972656, 10.87592887878418, 0.0)),
    Vector((7.9666666984558105, 10.742340087890625, 0.0)),
    Vector((7.738883972167969, 14.74984073638916, 0.0)),
    Vector((10.238971710205078, 14.894562721252441, 0.0)),
    Vector((9.837636947631836, 21.918821334838867, 0.0)),
    Vector((7.386362552642822, 21.774099349975586, 0.0)),
    Vector((7.234508514404297, 24.4012393951416, 0.0)),
    Vector((-2.2234997749328613, 23.866899490356445, 0.0)),
    Vector((-2.0824990272521973, 21.373342514038086, 0.0)),
    Vector((-4.284307956695557, 21.250892639160156, 0.0)),
    Vector((-3.8884236812591553, 14.293424606323242, 0.0)),
    Vector((-1.3991817235946655, 14.438138008117676, 0.0)),
    Vector((-1.1768324375152588, 10.57535171508789, 0.0)),
    Vector((-3.5088045597076416, 10.44176959991455, 0.0)),
    Vector((-3.080379009246826, 2.905440092086792, 0.0)),
    Vector((-0.17354246973991394, 3.072417974472046, 0.0)),
    Vector((0.0, 0.0, 2.9667274951934814)),
    Vector((8.221580505371094, 0.4675513505935669, 2.9667274951934814)),
    Vector((8.053454399108887, 3.3841216564178467, 2.9667274951934814)),
    Vector((10.689129829406738, 3.528843879699707, 2.9667274951934814)),
    Vector((10.271522521972656, 10.87592887878418, 2.9667274951934814)),
    Vector((7.9666666984558105, 10.742340087890625, 2.9667274951934814)),
    Vector((7.738883972167969, 14.74984073638916, 2.9667274951934814)),
    Vector((10.238971710205078, 14.894562721252441, 2.9667274951934814)),
    Vector((9.837636947631836, 21.918821334838867, 2.9667274951934814)),
    Vector((7.386362552642822, 21.774099349975586, 2.9667274951934814)),
    Vector((7.234508514404297, 24.4012393951416, 2.9667274951934814)),
    Vector((-2.2234997749328613, 23.866899490356445, 2.9667274951934814)),
    Vector((-2.0824990272521973, 21.373342514038086, 2.9667274951934814)),
    Vector((-4.284307956695557, 21.250892639160156, 2.9667274951934814)),
    Vector((-3.8884236812591553, 14.293424606323242, 2.9667274951934814)),
    Vector((-1.3991817235946655, 14.438138008117676, 2.9667274951934814)),
    Vector((-1.1768324375152588, 10.57535171508789, 2.9667274951934814)),
    Vector((-3.5088045597076416, 10.44176959991455, 2.9667274951934814)),
    Vector((-3.080379009246826, 2.905440092086792, 2.9667274951934814)),
    Vector((-0.17354246973991394, 3.072417974472046, 2.9667274951934814))
]
unitVectors = [
    Vector((0.9983869194984436, 0.05677705630660057, 0.0)),
    Vector((-0.0575496070086956, 0.9983426928520203, 0.0)),
    Vector((0.998495876789093, 0.05482638254761696, 0.0)),
    Vector((-0.05674826726317406, 0.9983885288238525, 0.0)),
    Vector((-0.9983245730400085, -0.05786260962486267, 0.0)),
    Vector((-0.05674750730395317, 0.9983885884284973, 0.0)),
    Vector((0.9983288049697876, 0.05779002234339714, 0.0)),
    Vector((-0.057042501866817474, 0.9983717203140259, 0.0)),
    Vector((-0.9982617497444153, -0.05893686041235924, 0.0)),
    Vector((-0.05770571529865265, 0.9983336329460144, 0.0)),
    Vector((-0.9984078407287598, -0.05640608072280884, 0.0)),
    Vector((0.05645584687590599, -0.9984051585197449, 0.0)),
    Vector((-0.9984571933746338, -0.05552750453352928, 0.0)),
    Vector((0.05680873245000839, -0.9983850717544556, 0.0)),
    Vector((0.9983143210411072, 0.05803753063082695, 0.0)),
    Vector((0.057466764003038406, -0.9983473420143127, 0.0)),
    Vector((-0.9983633756637573, -0.05718914419412613, 0.0)),
    Vector((0.0567564032971859, -0.9983880519866943, 0.0)),
    Vector((0.9983541369438171, 0.057348620146512985, 0.0)),
    Vector((0.05639411136507988, -0.9984085559844971, 0.0))
]
holesInfo = None
firstVertIndex = 20
numPolygonVerts = 20
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
