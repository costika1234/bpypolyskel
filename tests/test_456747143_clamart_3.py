import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.8726017475128174, 1.8145077228546143, 0.0)),
    Vector((-9.004655838012695, 6.55672550201416, 0.0)),
    Vector((-10.236567497253418, 3.9963791370391846, 0.0)),
    Vector((-10.559212684631348, 2.4824345111846924, 0.0)),
    Vector((-10.45655632019043, 0.9684893488883972, 0.0)),
    Vector((-10.111917495727539, -0.12244228273630142, 0.0)),
    Vector((-9.437302589416504, -1.2801661491394043, 0.0)),
    Vector((-8.264058113098145, -2.4044950008392334, 0.0)),
    Vector((-7.420787334442139, -2.8943018913269043, 0.0)),
    Vector((-6.254873752593994, -3.295053482055664, 0.0)),
    Vector((-5.308943271636963, -3.4175057411193848, 0.0)),
    Vector((-3.783721923828125, -3.272791862487793, 0.0)),
    Vector((-2.53714656829834, -2.794118642807007, 0.0)),
    Vector((-1.2172435522079468, -1.8367714881896973, 0.0)),
    Vector((-0.4473002552986145, -0.8460280895233154, 0.0)),
    Vector((0.8726017475128174, 1.8145077228546143, 3.024096965789795)),
    Vector((-9.004655838012695, 6.55672550201416, 3.024096965789795)),
    Vector((-10.236567497253418, 3.9963791370391846, 3.024096965789795)),
    Vector((-10.559212684631348, 2.4824345111846924, 3.024096965789795)),
    Vector((-10.45655632019043, 0.9684893488883972, 3.024096965789795)),
    Vector((-10.111917495727539, -0.12244228273630142, 3.024096965789795)),
    Vector((-9.437302589416504, -1.2801661491394043, 3.024096965789795)),
    Vector((-8.264058113098145, -2.4044950008392334, 3.024096965789795)),
    Vector((-7.420787334442139, -2.8943018913269043, 3.024096965789795)),
    Vector((-6.254873752593994, -3.295053482055664, 3.024096965789795)),
    Vector((-5.308943271636963, -3.4175057411193848, 3.024096965789795)),
    Vector((-3.783721923828125, -3.272791862487793, 3.024096965789795)),
    Vector((-2.53714656829834, -2.794118642807007, 3.024096965789795)),
    Vector((-1.2172435522079468, -1.8367714881896973, 3.024096965789795)),
    Vector((-0.4473002552986145, -0.8460280895233154, 3.024096965789795))
]
unitVectors = [
    Vector((-0.9014826416969299, 0.43281519412994385, 0.0)),
    Vector((-0.4335733950138092, -0.9011182188987732, 0.0)),
    Vector((-0.20843476057052612, -0.9780362248420715, 0.0)),
    Vector((0.06765183806419373, -0.9977089166641235, 0.0)),
    Vector((0.30123797059059143, -0.9535490870475769, 0.0)),
    Vector((0.5034677982330322, -0.8640140295028687, 0.0)),
    Vector((0.7219975590705872, -0.691895604133606, 0.0)),
    Vector((0.8647150993347168, -0.5022626519203186, 0.0)),
    Vector((0.9456943869590759, -0.32505714893341064, 0.0)),
    Vector((0.991724967956543, -0.1283804327249527, 0.0)),
    Vector((0.9955289959907532, 0.09445635974407196, 0.0)),
    Vector((0.9335408806800842, 0.3584709167480469, 0.0)),
    Vector((0.8094887733459473, 0.587135374546051, 0.0)),
    Vector((0.6136252880096436, 0.7895973920822144, 0.0)),
    Vector((0.4444192051887512, 0.8958189487457275, 0.0))
]
holesInfo = None
firstVertIndex = 15
numPolygonVerts = 15
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
