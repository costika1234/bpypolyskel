import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((11.780682563781738, 2.059427261352539, 0.0)),
    Vector((14.322142601013184, -12.490022659301758, 0.0)),
    Vector((24.122135162353516, -10.786788940429688, 0.0)),
    Vector((21.58673667907715, 3.7737865447998047, 0.0)),
    Vector((37.74933624267578, 6.590284824371338, 0.0)),
    Vector((40.29088592529297, -7.97028112411499, 0.0)),
    Vector((49.93239974975586, -6.289252281188965, 0.0)),
    Vector((47.39081954956055, 8.271306991577148, 0.0)),
    Vector((59.726051330566406, 10.431063652038574, 0.0)),
    Vector((58.18402099609375, 19.26980972290039, 0.0)),
    Vector((45.84881591796875, 17.110057830810547, 0.0)),
    Vector((43.27678680419922, 31.85986328125, 0.0)),
    Vector((33.63536071777344, 30.178850173950195, 0.0)),
    Vector((36.20735168457031, 15.429038047790527, 0.0)),
    Vector((20.044784545898438, 12.612546920776367, 0.0)),
    Vector((17.55207633972168, 26.872562408447266, 0.0)),
    Vector((7.752170562744141, 25.158212661743164, 0.0)),
    Vector((10.238750457763672, 10.89819049835205, 0.0)),
    Vector((-1.5419079065322876, 8.838768005371094, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((11.780682563781738, 2.059427261352539, 5.8297648429870605)),
    Vector((14.322142601013184, -12.490022659301758, 5.8297648429870605)),
    Vector((24.122135162353516, -10.786788940429688, 5.8297648429870605)),
    Vector((21.58673667907715, 3.7737865447998047, 5.8297648429870605)),
    Vector((37.74933624267578, 6.590284824371338, 5.8297648429870605)),
    Vector((40.29088592529297, -7.97028112411499, 5.8297648429870605)),
    Vector((49.93239974975586, -6.289252281188965, 5.8297648429870605)),
    Vector((47.39081954956055, 8.271306991577148, 5.8297648429870605)),
    Vector((59.726051330566406, 10.431063652038574, 5.8297648429870605)),
    Vector((58.18402099609375, 19.26980972290039, 5.8297648429870605)),
    Vector((45.84881591796875, 17.110057830810547, 5.8297648429870605)),
    Vector((43.27678680419922, 31.85986328125, 5.8297648429870605)),
    Vector((33.63536071777344, 30.178850173950195, 5.8297648429870605)),
    Vector((36.20735168457031, 15.429038047790527, 5.8297648429870605)),
    Vector((20.044784545898438, 12.612546920776367, 5.8297648429870605)),
    Vector((17.55207633972168, 26.872562408447266, 5.8297648429870605)),
    Vector((7.752170562744141, 25.158212661743164, 5.8297648429870605)),
    Vector((10.238750457763672, 10.89819049835205, 5.8297648429870605)),
    Vector((-1.5419079065322876, 8.838768005371094, 5.8297648429870605)),
    Vector((0.0, 0.0, 5.8297648429870605))
]
unitVectors = [
    Vector((0.17207196354866028, -0.9850843548774719, 0.0)),
    Vector((0.9852306246757507, 0.17123258113861084, 0.0)),
    Vector((-0.17154636979103088, 0.9851760864257812, 0.0)),
    Vector((0.9851539731025696, 0.17167314887046814, 0.0)),
    Vector((0.17195037007331848, -0.985105574131012, 0.0)),
    Vector((0.9851385354995728, 0.17176206409931183, 0.0)),
    Vector((-0.17195245623588562, 0.9851052165031433, 0.0)),
    Vector((0.9850156903266907, 0.17246487736701965, 0.0)),
    Vector((-0.17186661064624786, 0.9851202964782715, 0.0)),
    Vector((-0.9850156307220459, -0.17246484756469727, 0.0)),
    Vector((-0.17178493738174438, 0.9851344227790833, 0.0)),
    Vector((-0.985138475894928, -0.17176200449466705, 0.0)),
    Vector((0.17178238928318024, -0.9851348996162415, 0.0)),
    Vector((-0.9851539134979248, -0.17167305946350098, 0.0)),
    Vector((-0.1721930205821991, 0.9850631952285767, 0.0)),
    Vector((-0.9850413203239441, -0.17231853306293488, 0.0)),
    Vector((0.17178212106227875, -0.9851349592208862, 0.0)),
    Vector((-0.9850615859031677, -0.17220242321491241, 0.0)),
    Vector((0.1718529462814331, -0.9851226210594177, 0.0)),
    Vector((0.9850615859031677, 0.172202467918396, 0.0))
]
holesInfo = None
firstVertIndex = 20
numPolygonVerts = 20
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
