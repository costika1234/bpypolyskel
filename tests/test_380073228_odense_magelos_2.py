import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((8.199833869934082, -0.11131185293197632, 0.0)),
    Vector((8.496947288513184, 14.104187965393066, 0.0)),
    Vector((9.03432559967041, 15.517946243286133, 0.0)),
    Vector((10.393582344055176, 16.25265884399414, 0.0)),
    Vector((11.66433048248291, 16.508695602416992, 0.0)),
    Vector((26.54027557373047, 20.87248420715332, 0.0)),
    Vector((30.4663028717041, 22.70928192138672, 0.0)),
    Vector((34.80958557128906, 24.334577560424805, 0.0)),
    Vector((36.55449676513672, 23.867050170898438, 0.0)),
    Vector((49.15468978881836, 5.031915664672852, 0.0)),
    Vector((56.42510223388672, 9.54044246673584, 0.0)),
    Vector((42.85759353637695, 29.46647834777832, 0.0)),
    Vector((40.68276596069336, 31.781902313232422, 0.0)),
    Vector((38.052757263183594, 33.0954475402832, 0.0)),
    Vector((35.82105255126953, 33.5073127746582, 0.0)),
    Vector((34.133052825927734, 33.20673751831055, 0.0)),
    Vector((23.54987144470215, 28.497852325439453, 0.0)),
    Vector((13.067818641662598, 24.89105796813965, 0.0)),
    Vector((2.686901569366455, 22.58672523498535, 0.0)),
    Vector((1.4540883302688599, 21.473529815673828, 0.0)),
    Vector((0.6827895045280457, 20.18222427368164, 0.0)),
    Vector((0.0, 0.0, 11.965124130249023)),
    Vector((8.199833869934082, -0.11131185293197632, 11.965124130249023)),
    Vector((8.496947288513184, 14.104187965393066, 11.965124130249023)),
    Vector((9.03432559967041, 15.517946243286133, 11.965124130249023)),
    Vector((10.393582344055176, 16.25265884399414, 11.965124130249023)),
    Vector((11.66433048248291, 16.508695602416992, 11.965124130249023)),
    Vector((26.54027557373047, 20.87248420715332, 11.965124130249023)),
    Vector((30.4663028717041, 22.70928192138672, 11.965124130249023)),
    Vector((34.80958557128906, 24.334577560424805, 11.965124130249023)),
    Vector((36.55449676513672, 23.867050170898438, 11.965124130249023)),
    Vector((49.15468978881836, 5.031915664672852, 11.965124130249023)),
    Vector((56.42510223388672, 9.54044246673584, 11.965124130249023)),
    Vector((42.85759353637695, 29.46647834777832, 11.965124130249023)),
    Vector((40.68276596069336, 31.781902313232422, 11.965124130249023)),
    Vector((38.052757263183594, 33.0954475402832, 11.965124130249023)),
    Vector((35.82105255126953, 33.5073127746582, 11.965124130249023)),
    Vector((34.133052825927734, 33.20673751831055, 11.965124130249023)),
    Vector((23.54987144470215, 28.497852325439453, 11.965124130249023)),
    Vector((13.067818641662598, 24.89105796813965, 11.965124130249023)),
    Vector((2.686901569366455, 22.58672523498535, 11.965124130249023)),
    Vector((1.4540883302688599, 21.473529815673828, 11.965124130249023)),
    Vector((0.6827895045280457, 20.18222427368164, 11.965124130249023))
]
unitVectors = [
    Vector((0.999907910823822, -0.013573640957474709, 0.0)),
    Vector((0.020896101370453835, 0.999781608581543, 0.0)),
    Vector((0.3553045094013214, 0.9347505569458008, 0.0)),
    Vector((0.8797121644020081, 0.47550663352012634, 0.0)),
    Vector((0.9802997708320618, 0.19751575589179993, 0.0)),
    Vector((0.9595658779144287, 0.2814841568470001, 0.0)),
    Vector((0.9057714343070984, 0.42376649379730225, 0.0)),
    Vector((0.9365724325180054, 0.35047388076782227, 0.0)),
    Vector((0.9659285545349121, -0.25880861282348633, 0.0)),
    Vector((0.5560265183448792, -0.831164538860321, 0.0)),
    Vector((0.8498570919036865, 0.5270131826400757, 0.0)),
    Vector((-0.5628149509429932, 0.8265829682350159, 0.0)),
    Vector((-0.6846306920051575, 0.7288901209831238, 0.0)),
    Vector((-0.8946256041526794, 0.44681647419929504, 0.0)),
    Vector((-0.9833933115005493, 0.1814870536327362, 0.0)),
    Vector((-0.984513521194458, -0.17530833184719086, 0.0)),
    Vector((-0.9136432409286499, -0.40651682019233704, 0.0)),
    Vector((-0.9455870389938354, -0.32536929845809937, 0.0)),
    Vector((-0.9762376546859741, -0.21670305728912354, 0.0)),
    Vector((-0.7421965003013611, -0.6701824069023132, 0.0)),
    Vector((-0.5127913355827332, -0.8585132360458374, 0.0)),
    Vector((-0.03381188586354256, -0.9994282126426697, 0.0))
]
holesInfo = None
firstVertIndex = 22
numPolygonVerts = 22
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
