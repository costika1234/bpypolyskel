import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((-4.313713073730469, -0.3896164000034332, 0.0)),
    Vector((-5.166746139526367, 0.1447179615497589, 0.0)),
    Vector((-7.233444690704346, 0.04453294724225998, 0.0)),
    Vector((-8.01712703704834, -0.7680981755256653, 0.0)),
    Vector((-14.182548522949219, -1.335814118385315, 0.0)),
    Vector((-12.941174507141113, -14.148691177368164, 0.0)),
    Vector((-10.347391128540039, -13.914925575256348, 0.0)),
    Vector((-10.291910171508789, -14.527183532714844, 0.0)),
    Vector((-5.936573505401611, -14.170968055725098, 0.0)),
    Vector((-4.584200859069824, -15.451143264770508, 0.0)),
    Vector((-3.2665021419525146, -13.903803825378418, 0.0)),
    Vector((1.2136684656143188, -13.480790138244629, 0.0)),
    Vector((0.7073945999145508, -8.415753364562988, 0.0)),
    Vector((2.8295774459838867, -6.712564468383789, 0.0)),
    Vector((0.4577256441116333, -5.276543617248535, 0.0)),
    Vector((0.0, 0.0, 9.063825607299805)),
    Vector((-4.313713073730469, -0.3896164000034332, 9.063825607299805)),
    Vector((-5.166746139526367, 0.1447179615497589, 9.063825607299805)),
    Vector((-7.233444690704346, 0.04453294724225998, 9.063825607299805)),
    Vector((-8.01712703704834, -0.7680981755256653, 9.063825607299805)),
    Vector((-14.182548522949219, -1.335814118385315, 9.063825607299805)),
    Vector((-12.941174507141113, -14.148691177368164, 9.063825607299805)),
    Vector((-10.347391128540039, -13.914925575256348, 9.063825607299805)),
    Vector((-10.291910171508789, -14.527183532714844, 9.063825607299805)),
    Vector((-5.936573505401611, -14.170968055725098, 9.063825607299805)),
    Vector((-4.584200859069824, -15.451143264770508, 9.063825607299805)),
    Vector((-3.2665021419525146, -13.903803825378418, 9.063825607299805)),
    Vector((1.2136684656143188, -13.480790138244629, 9.063825607299805)),
    Vector((0.7073945999145508, -8.415753364562988, 9.063825607299805)),
    Vector((2.8295774459838867, -6.712564468383789, 9.063825607299805)),
    Vector((0.4577256441116333, -5.276543617248535, 9.063825607299805))
]
unitVectors = [
    Vector((-0.9959458708763123, -0.08995425701141357, 0.0)),
    Vector((-0.8474671244621277, 0.5308479070663452, 0.0)),
    Vector((-0.9988270998001099, -0.04841901361942291, 0.0)),
    Vector((-0.6941694021224976, -0.7198116779327393, 0.0)),
    Vector((-0.9957873821258545, -0.0916927382349968, 0.0)),
    Vector((0.09643334895372391, -0.9953394532203674, 0.0)),
    Vector((0.9959632754325867, 0.08976152539253235, 0.0)),
    Vector((0.09024719148874283, -0.995919406414032, 0.0)),
    Vector((0.9966719746589661, 0.0815160796046257, 0.0)),
    Vector((0.7262260317802429, -0.6874558925628662, 0.0)),
    Vector((0.6483508944511414, 0.7613416314125061, 0.0)),
    Vector((0.9955720901489258, 0.09400101751089096, 0.0)),
    Vector((-0.09945901483297348, 0.9950416088104248, 0.0)),
    Vector((0.7798921465873718, 0.6259138584136963, 0.0)),
    Vector((-0.8554319143295288, 0.5179151892662048, 0.0)),
    Vector((-0.08642268925905228, 0.996258556842804, 0.0))
]
holesInfo = None
firstVertIndex = 16
numPolygonVerts = 16
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
