import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((52.07371520996094, 2.360236644744873, 0.0)),
    Vector((53.422550201416016, 3.3064663410186768, 0.0)),
    Vector((54.7154655456543, 4.519862174987793, 0.0)),
    Vector((55.28853225708008, 6.12286901473999, 0.0)),
    Vector((55.379356384277344, 8.91698932647705, 0.0)),
    Vector((56.32981491088867, 10.965278625488281, 0.0)),
    Vector((58.286651611328125, 13.447724342346191, 0.0)),
    Vector((58.803810119628906, 14.772432327270508, 0.0)),
    Vector((58.7059326171875, 17.666738510131836, 0.0)),
    Vector((58.20272445678711, 18.94690704345703, 0.0)),
    Vector((55.4700813293457, 20.928363800048828, 0.0)),
    Vector((53.897579193115234, 23.310583114624023, 0.0)),
    Vector((54.11420822143555, 25.347732543945312, 0.0)),
    Vector((53.478214263916016, 26.750350952148438, 0.0)),
    Vector((51.83583450317383, 28.453523635864258, 0.0)),
    Vector((50.54989242553711, 28.954448699951172, 0.0)),
    Vector((-0.19568610191345215, 26.505170822143555, 0.0)),
    Vector((-0.18869733810424805, 26.11555290222168, 0.0)),
    Vector((-0.7128565907478333, 26.104419708251953, 0.0)),
    Vector((0.0, 0.0, 15.670003890991211)),
    Vector((52.07371520996094, 2.360236644744873, 15.670003890991211)),
    Vector((53.422550201416016, 3.3064663410186768, 15.670003890991211)),
    Vector((54.7154655456543, 4.519862174987793, 15.670003890991211)),
    Vector((55.28853225708008, 6.12286901473999, 15.670003890991211)),
    Vector((55.379356384277344, 8.91698932647705, 15.670003890991211)),
    Vector((56.32981491088867, 10.965278625488281, 15.670003890991211)),
    Vector((58.286651611328125, 13.447724342346191, 15.670003890991211)),
    Vector((58.803810119628906, 14.772432327270508, 15.670003890991211)),
    Vector((58.7059326171875, 17.666738510131836, 15.670003890991211)),
    Vector((58.20272445678711, 18.94690704345703, 15.670003890991211)),
    Vector((55.4700813293457, 20.928363800048828, 15.670003890991211)),
    Vector((53.897579193115234, 23.310583114624023, 15.670003890991211)),
    Vector((54.11420822143555, 25.347732543945312, 15.670003890991211)),
    Vector((53.478214263916016, 26.750350952148438, 15.670003890991211)),
    Vector((51.83583450317383, 28.453523635864258, 15.670003890991211)),
    Vector((50.54989242553711, 28.954448699951172, 15.670003890991211)),
    Vector((-0.19568610191345215, 26.505170822143555, 15.670003890991211)),
    Vector((-0.18869733810424805, 26.11555290222168, 15.670003890991211)),
    Vector((-0.7128565907478333, 26.104419708251953, 15.670003890991211)),
]
unitVectors = [
    Vector((0.9989743232727051, 0.04527842625975609, 0.0)),
    Vector((0.8186483383178711, 0.574295163154602, 0.0)),
    Vector((0.7291746735572815, 0.6843274831771851, 0.0)),
    Vector((0.33663037419319153, 0.9416369199752808, 0.0)),
    Vector((0.03248828649520874, 0.9994721412658691, 0.0)),
    Vector((0.4209171235561371, 0.9070990681648254, 0.0)),
    Vector((0.6190616488456726, 0.7853424549102783, 0.0)),
    Vector((0.36366409063339233, 0.9315301179885864, 0.0)),
    Vector((-0.033797938376665115, 0.9994286298751831, 0.0)),
    Vector((-0.36583173274993896, 0.9306809902191162, 0.0)),
    Vector((-0.8095695972442627, 0.5870240330696106, 0.0)),
    Vector((-0.5509001016616821, 0.834571123123169, 0.0)),
    Vector((0.10574311017990112, 0.9943935871124268, 0.0)),
    Vector((-0.412963330745697, 0.9107475876808167, 0.0)),
    Vector((-0.6941431760787964, 0.719836950302124, 0.0)),
    Vector((-0.9317997694015503, 0.3629727065563202, 0.0)),
    Vector((-0.9988372325897217, -0.04820971563458443, 0.0)),
    Vector((0.01793459616601467, -0.999839186668396, 0.0)),
    Vector((-0.9997744560241699, -0.021235307678580284, 0.0)),
    Vector((0.027297712862491608, -0.9996273517608643, 0.0)),
]
holesInfo = None
firstVertIndex = 20
numPolygonVerts = 20
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(
        verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors
    )


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
