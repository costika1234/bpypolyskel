import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((7.020531177520752, -10.196861267089844, 0.0)),
    Vector((32.82562255859375, 7.569822788238525, 0.0)),
    Vector((26.556745529174805, 16.675724029541016, 0.0)),
    Vector((22.747297286987305, 14.059698104858398, 0.0)),
    Vector((23.017318725585938, 13.24706745147705, 0.0)),
    Vector((22.93704605102539, 12.401039123535156, 0.0)),
    Vector((22.49917984008789, 11.655196189880371, 0.0)),
    Vector((21.9372501373291, 11.221048355102539, 0.0)),
    Vector((21.258554458618164, 11.020669937133789, 0.0)),
    Vector((20.5506649017334, 11.05406379699707, 0.0)),
    Vector((19.90115737915039, 11.33236026763916, 0.0)),
    Vector((19.383010864257812, 11.822163581848145, 0.0)),
    Vector((16.25225067138672, 9.963118553161621, 0.0)),
    Vector((16.930952072143555, 8.816529273986816, 0.0)),
    Vector((17.05501937866211, 7.558619499206543, 0.0)),
    Vector((16.697429656982422, 6.334104061126709, 0.0)),
    Vector((15.901968955993652, 5.354490280151367, 0.0)),
    Vector((14.79999828338623, 4.74222993850708, 0.0)),
    Vector((13.559368133544922, 4.586379528045654, 0.0)),
    Vector((12.34792709350586, 4.90920352935791, 0.0)),
    Vector((11.348123550415039, 5.666173934936523, 0.0)),
    Vector((10.691316604614258, 6.690311908721924, 0.0)),
    Vector((7.159171104431152, 4.408256530761719, 0.0)),
    Vector((7.4145965576171875, 3.6958119869232178, 0.0)),
    Vector((7.407299518585205, 2.9388394355773926, 0.0)),
    Vector((7.137280464172363, 2.2263944149017334, 0.0)),
    Vector((6.633730888366699, 1.658664345741272, 0.0)),
    Vector((5.962330341339111, 1.2913093566894531, 0.0)),
    Vector((5.0428032875061035, 1.202252745628357, 0.0)),
    Vector((4.159765243530273, 1.5139466524124146, 0.0)),
    Vector((3.532150983810425, 2.4267659187316895, 0.0)),
    Vector((0.0, 0.0, 14.235403060913086)),
    Vector((7.020531177520752, -10.196861267089844, 14.235403060913086)),
    Vector((32.82562255859375, 7.569822788238525, 14.235403060913086)),
    Vector((26.556745529174805, 16.675724029541016, 14.235403060913086)),
    Vector((22.747297286987305, 14.059698104858398, 14.235403060913086)),
    Vector((23.017318725585938, 13.24706745147705, 14.235403060913086)),
    Vector((22.93704605102539, 12.401039123535156, 14.235403060913086)),
    Vector((22.49917984008789, 11.655196189880371, 14.235403060913086)),
    Vector((21.9372501373291, 11.221048355102539, 14.235403060913086)),
    Vector((21.258554458618164, 11.020669937133789, 14.235403060913086)),
    Vector((20.5506649017334, 11.05406379699707, 14.235403060913086)),
    Vector((19.90115737915039, 11.33236026763916, 14.235403060913086)),
    Vector((19.383010864257812, 11.822163581848145, 14.235403060913086)),
    Vector((16.25225067138672, 9.963118553161621, 14.235403060913086)),
    Vector((16.930952072143555, 8.816529273986816, 14.235403060913086)),
    Vector((17.05501937866211, 7.558619499206543, 14.235403060913086)),
    Vector((16.697429656982422, 6.334104061126709, 14.235403060913086)),
    Vector((15.901968955993652, 5.354490280151367, 14.235403060913086)),
    Vector((14.79999828338623, 4.74222993850708, 14.235403060913086)),
    Vector((13.559368133544922, 4.586379528045654, 14.235403060913086)),
    Vector((12.34792709350586, 4.90920352935791, 14.235403060913086)),
    Vector((11.348123550415039, 5.666173934936523, 14.235403060913086)),
    Vector((10.691316604614258, 6.690311908721924, 14.235403060913086)),
    Vector((7.159171104431152, 4.408256530761719, 14.235403060913086)),
    Vector((7.4145965576171875, 3.6958119869232178, 14.235403060913086)),
    Vector((7.407299518585205, 2.9388394355773926, 14.235403060913086)),
    Vector((7.137280464172363, 2.2263944149017334, 14.235403060913086)),
    Vector((6.633730888366699, 1.658664345741272, 14.235403060913086)),
    Vector((5.962330341339111, 1.2913093566894531, 14.235403060913086)),
    Vector((5.0428032875061035, 1.202252745628357, 14.235403060913086)),
    Vector((4.159765243530273, 1.5139466524124146, 14.235403060913086)),
    Vector((3.532150983810425, 2.4267659187316895, 14.235403060913086))
]
unitVectors = [
    Vector((0.5670875906944275, -0.8236575722694397, 0.0)),
    Vector((0.8236590623855591, 0.567085325717926, 0.0)),
    Vector((-0.5670551061630249, 0.8236799240112305, 0.0)),
    Vector((-0.8243418335914612, -0.5660923719406128, 0.0)),
    Vector((0.31532853841781616, -0.9489825963973999, 0.0)),
    Vector((-0.09445755183696747, -0.9955288767814636, 0.0)),
    Vector((-0.5062769651412964, -0.8623709082603455, 0.0)),
    Vector((-0.7913330793380737, -0.6113852858543396, 0.0)),
    Vector((-0.959073543548584, -0.2831572890281677, 0.0)),
    Vector((-0.9988892078399658, 0.047121427953243256, 0.0)),
    Vector((-0.919177770614624, 0.3938429057598114, 0.0)),
    Vector((-0.7267031073570251, 0.6869516372680664, 0.0)),
    Vector((-0.8598358631134033, -0.5105704665184021, 0.0)),
    Vector((0.5093807578086853, -0.8605411648750305, 0.0)),
    Vector((0.0981534793972969, -0.995171308517456, 0.0)),
    Vector((-0.28031739592552185, -0.9599072933197021, 0.0)),
    Vector((-0.6303656101226807, -0.7762984037399292, 0.0)),
    Vector((-0.8741388916969299, -0.4856759011745453, 0.0)),
    Vector((-0.9922017455101013, -0.12464234232902527, 0.0)),
    Vector((-0.9662799835205078, 0.25749364495277405, 0.0)),
    Vector((-0.7972673773765564, 0.6036263704299927, 0.0)),
    Vector((-0.5398456454277039, 0.841763973236084, 0.0)),
    Vector((-0.8399441838264465, -0.5426727533340454, 0.0)),
    Vector((0.3374856412410736, -0.9413306713104248, 0.0)),
    Vector((-0.009639319032430649, -0.9999535083770752, 0.0)),
    Vector((-0.3544032573699951, -0.9350926876068115, 0.0)),
    Vector((-0.6635541915893555, -0.7481282353401184, 0.0)),
    Vector((-0.8772705793380737, -0.4799962341785431, 0.0)),
    Vector((-0.9953427314758301, -0.09639939665794373, 0.0)),
    Vector((-0.942979097366333, 0.3328518569469452, 0.0)),
    Vector((-0.5665600895881653, 0.8240203857421875, 0.0)),
    Vector((-0.8242148756980896, -0.5662772059440613, 0.0))
]
holesInfo = None
firstVertIndex = 32
numPolygonVerts = 32
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
