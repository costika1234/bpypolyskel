import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((-8.712174415588379, -11.73306655883789, 0.0)),
    Vector((-10.439224243164062, -10.441757202148438, 0.0)),
    Vector((-18.620037078857422, -21.45123291015625, 0.0)),
    Vector((-16.613300323486328, -22.954051971435547, 0.0)),
    Vector((-28.304229736328125, -38.95061111450195, 0.0)),
    Vector((-7.1669769287109375, -54.346168518066406, 0.0)),
    Vector((-3.65690279006958, -49.50377655029297, 0.0)),
    Vector((-4.922483921051025, -48.5909538269043, 0.0)),
    Vector((-2.5731148719787598, -45.062129974365234, 0.0)),
    Vector((-10.355377197265625, -39.27350616455078, 0.0)),
    Vector((1.8878748416900635, -22.319557189941406, 0.0)),
    Vector((-1.7480313777923584, -19.670154571533203, 0.0)),
    Vector((3.2093803882598877, -11.276663780212402, 0.0)),
    Vector((20.570812225341797, -14.61620807647705, 0.0)),
    Vector((20.28413963317871, -15.55129337310791, 0.0)),
    Vector((28.968360900878906, -17.176515579223633, 0.0)),
    Vector((29.317962646484375, -16.263694763183594, 0.0)),
    Vector((43.03652572631836, -18.96866226196289, 0.0)),
    Vector((41.84791564941406, -25.425201416015625, 0.0)),
    Vector((43.54710006713867, -36.76864242553711, 0.0)),
    Vector((57.09086990356445, -34.508724212646484, 0.0)),
    Vector((52.14712142944336, -4.953453063964844, 0.0)),
    Vector((33.88372039794922, -1.3691182136535645, 0.0)),
    Vector((34.0724983215332, -0.3895054757595062, 0.0)),
    Vector((21.738426208496094, 1.8590813875198364, 0.0)),
    Vector((21.570619583129883, 0.935128927230835, 0.0)),
    Vector((3.2653071880340576, 4.419384956359863, 0.0)),
    Vector((2.230478286743164, 2.9610989093780518, 0.0)),
    Vector((1.859897255897522, 2.8275153636932373, 0.0)),
    Vector((1.7410316467285156, 2.76072359085083, 0.0)),
    Vector((1.678102731704712, 2.738459825515747, 0.0)),
    Vector((1.3984190225601196, 2.5714805126190186, 0.0)),
    Vector((1.342482328414917, 2.5269525051116943, 0.0)),
    Vector((1.2865455150604248, 2.4935567378997803, 0.0)),
    Vector((1.2376009225845337, 2.449028968811035, 0.0)),
    Vector((1.1816641092300415, 2.415633201599121, 0.0)),
    Vector((0.8879961371421814, 2.1484663486480713, 0.0)),
    Vector((0.846043586730957, 2.092806577682495, 0.0)),
    Vector((0.7131937742233276, 1.9480911493301392, 0.0)),
    Vector((0.5943281650543213, 1.7922438383102417, 0.0)),
    Vector((0.5593677163124084, 1.7365840673446655, 0.0)),
    Vector((0.5174151062965393, 1.6809242963790894, 0.0)),
    Vector((0.412533700466156, 1.5139451026916504, 0.0)),
    Vector((0.23773130774497986, 1.1577227115631104, 0.0)),
    Vector((0.14683404564857483, 0.9128198027610779, 0.0)),
    Vector((0.13284985721111298, 0.8460281491279602, 0.0)),
    Vector((0.111873559653759, 0.7792364358901978, 0.0)),
    Vector((0.09788937121629715, 0.7124447226524353, 0.0)),
    Vector((0.07691307365894318, 0.6567850112915039, 0.0)),
    Vector((0.048944685608148575, 0.523201584815979, 0.0)),
    Vector((0.04195258766412735, 0.45640990138053894, 0.0)),
    Vector((0.0279683917760849, 0.3896182179450989, 0.0)),
    Vector((0.0, 0.13358338177204132, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((-8.712174415588379, -11.73306655883789, 12.662151336669922)),
    Vector((-10.439224243164062, -10.441757202148438, 12.662151336669922)),
    Vector((-18.620037078857422, -21.45123291015625, 12.662151336669922)),
    Vector((-16.613300323486328, -22.954051971435547, 12.662151336669922)),
    Vector((-28.304229736328125, -38.95061111450195, 12.662151336669922)),
    Vector((-7.1669769287109375, -54.346168518066406, 12.662151336669922)),
    Vector((-3.65690279006958, -49.50377655029297, 12.662151336669922)),
    Vector((-4.922483921051025, -48.5909538269043, 12.662151336669922)),
    Vector((-2.5731148719787598, -45.062129974365234, 12.662151336669922)),
    Vector((-10.355377197265625, -39.27350616455078, 12.662151336669922)),
    Vector((1.8878748416900635, -22.319557189941406, 12.662151336669922)),
    Vector((-1.7480313777923584, -19.670154571533203, 12.662151336669922)),
    Vector((3.2093803882598877, -11.276663780212402, 12.662151336669922)),
    Vector((20.570812225341797, -14.61620807647705, 12.662151336669922)),
    Vector((20.28413963317871, -15.55129337310791, 12.662151336669922)),
    Vector((28.968360900878906, -17.176515579223633, 12.662151336669922)),
    Vector((29.317962646484375, -16.263694763183594, 12.662151336669922)),
    Vector((43.03652572631836, -18.96866226196289, 12.662151336669922)),
    Vector((41.84791564941406, -25.425201416015625, 12.662151336669922)),
    Vector((43.54710006713867, -36.76864242553711, 12.662151336669922)),
    Vector((57.09086990356445, -34.508724212646484, 12.662151336669922)),
    Vector((52.14712142944336, -4.953453063964844, 12.662151336669922)),
    Vector((33.88372039794922, -1.3691182136535645, 12.662151336669922)),
    Vector((34.0724983215332, -0.3895054757595062, 12.662151336669922)),
    Vector((21.738426208496094, 1.8590813875198364, 12.662151336669922)),
    Vector((21.570619583129883, 0.935128927230835, 12.662151336669922)),
    Vector((3.2653071880340576, 4.419384956359863, 12.662151336669922)),
    Vector((2.230478286743164, 2.9610989093780518, 12.662151336669922)),
    Vector((1.859897255897522, 2.8275153636932373, 12.662151336669922)),
    Vector((1.7410316467285156, 2.76072359085083, 12.662151336669922)),
    Vector((1.678102731704712, 2.738459825515747, 12.662151336669922)),
    Vector((1.3984190225601196, 2.5714805126190186, 12.662151336669922)),
    Vector((1.342482328414917, 2.5269525051116943, 12.662151336669922)),
    Vector((1.2865455150604248, 2.4935567378997803, 12.662151336669922)),
    Vector((1.2376009225845337, 2.449028968811035, 12.662151336669922)),
    Vector((1.1816641092300415, 2.415633201599121, 12.662151336669922)),
    Vector((0.8879961371421814, 2.1484663486480713, 12.662151336669922)),
    Vector((0.846043586730957, 2.092806577682495, 12.662151336669922)),
    Vector((0.7131937742233276, 1.9480911493301392, 12.662151336669922)),
    Vector((0.5943281650543213, 1.7922438383102417, 12.662151336669922)),
    Vector((0.5593677163124084, 1.7365840673446655, 12.662151336669922)),
    Vector((0.5174151062965393, 1.6809242963790894, 12.662151336669922)),
    Vector((0.412533700466156, 1.5139451026916504, 12.662151336669922)),
    Vector((0.23773130774497986, 1.1577227115631104, 12.662151336669922)),
    Vector((0.14683404564857483, 0.9128198027610779, 12.662151336669922)),
    Vector((0.13284985721111298, 0.8460281491279602, 12.662151336669922)),
    Vector((0.111873559653759, 0.7792364358901978, 12.662151336669922)),
    Vector((0.09788937121629715, 0.7124447226524353, 12.662151336669922)),
    Vector((0.07691307365894318, 0.6567850112915039, 12.662151336669922)),
    Vector((0.048944685608148575, 0.523201584815979, 12.662151336669922)),
    Vector((0.04195258766412735, 0.45640990138053894, 12.662151336669922)),
    Vector((0.0279683917760849, 0.3896182179450989, 12.662151336669922)),
    Vector((0.0, 0.13358338177204132, 12.662151336669922)),
    Vector((0.0, 0.0, 12.662151336669922)),
]
unitVectors = [
    Vector((-0.8008845448493958, 0.5988187193870544, 0.0)),
    Vector((-0.5964341759681702, -0.8026620149612427, 0.0)),
    Vector((0.8004274368286133, -0.5994296669960022, 0.0)),
    Vector((-0.5900539755821228, -0.8073638081550598, 0.0)),
    Vector((0.8083173036575317, -0.5887470841407776, 0.0)),
    Vector((0.5868952870368958, 0.809662938117981, 0.0)),
    Vector((-0.8110465407371521, 0.5849816203117371, 0.0)),
    Vector((0.5541807413101196, 0.832396388053894, 0.0)),
    Vector((-0.8023728132247925, 0.5968231558799744, 0.0)),
    Vector((0.5854507684707642, 0.8107080459594727, 0.0)),
    Vector((-0.8081957101821899, 0.5889139175415039, 0.0)),
    Vector((0.5085484385490417, 0.8610333204269409, 0.0)),
    Vector((0.9819980263710022, -0.1888914555311203, 0.0)),
    Vector((-0.293108731508255, -0.9560790657997131, 0.0)),
    Vector((0.9829350113868713, -0.1839529126882553, 0.0)),
    Vector((0.35765692591667175, 0.9338531494140625, 0.0)),
    Vector((0.9811099171638489, -0.19345106184482574, 0.0)),
    Vector((-0.1810515820980072, -0.9834735989570618, 0.0)),
    Vector((0.14814162254333496, -0.9889661073684692, 0.0)),
    Vector((0.986362874507904, 0.16458486020565033, 0.0)),
    Vector((-0.16497917473316193, 0.9862970113754272, 0.0)),
    Vector((-0.981280505657196, 0.19258394837379456, 0.0)),
    Vector((0.1892251968383789, 0.9819337129592896, 0.0)),
    Vector((-0.9837851524353027, 0.1793508529663086, 0.0)),
    Vector((-0.17869502305984497, -0.9839045405387878, 0.0)),
    Vector((-0.9823629260063171, 0.18698416650295258, 0.0)),
    Vector((-0.5787158608436584, -0.8155292868614197, 0.0)),
    Vector((-0.9407463073730469, -0.339111328125, 0.0)),
    Vector((-0.8717952370643616, -0.48987045884132385, 0.0)),
    Vector((-0.9427382349967957, -0.33353352546691895, 0.0)),
    Vector((-0.858616292476654, -0.512618899345398, 0.0)),
    Vector((-0.782376766204834, -0.6228054761886597, 0.0)),
    Vector((-0.8586171865463257, -0.5126173496246338, 0.0)),
    Vector((-0.7396941781044006, -0.6729431748390198, 0.0)),
    Vector((-0.8586171865463257, -0.5126173496246338, 0.0)),
    Vector((-0.7396942973136902, -0.6729429960250854, 0.0)),
    Vector((-0.6019056439399719, -0.7985671758651733, 0.0)),
    Vector((-0.6762610673904419, -0.7366620302200317, 0.0)),
    Vector((-0.6064460277557373, -0.7951247096061707, 0.0)),
    Vector((-0.5318913459777832, -0.8468126654624939, 0.0)),
    Vector((-0.6019062399864197, -0.7985668182373047, 0.0)),
    Vector((-0.5318918228149414, -0.84681236743927, 0.0)),
    Vector((-0.4405302107334137, -0.8977378606796265, 0.0)),
    Vector((-0.3479622006416321, -0.9375085234642029, 0.0)),
    Vector((-0.20492689311504364, -0.978777289390564, 0.0)),
    Vector((-0.29962658882141113, -0.9540565609931946, 0.0)),
    Vector((-0.20492671430110931, -0.978777289390564, 0.0)),
    Vector((-0.35265448689460754, -0.9357536435127258, 0.0)),
    Vector((-0.20492680370807648, -0.978777289390564, 0.0)),
    Vector((-0.10411620885133743, -0.9945651292800903, 0.0)),
    Vector((-0.20492690801620483, -0.9787772297859192, 0.0)),
    Vector((-0.10859069973230362, -0.9940866231918335, 0.0)),
    Vector((0.0, -1.0, 0.0)),
    Vector((-0.5961556434631348, -0.8028689026832581, 0.0)),
]
holesInfo = None
firstVertIndex = 54
numPolygonVerts = 54
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(
        verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors
    )


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
