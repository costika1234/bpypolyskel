import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((6.593071460723877, -5.799741268157959, 0.0)),
    Vector((4.474599361419678, -8.104057312011719, 0.0)),
    Vector((3.924611806869507, -9.350835800170898, 0.0)),
    Vector((3.822762966156006, -10.619877815246582, 0.0)),
    Vector((4.2097930908203125, -11.710808753967285, 0.0)),
    Vector((4.698672771453857, -12.28966999053955, 0.0)),
    Vector((5.676432132720947, -12.879661560058594, 0.0)),
    Vector((6.83073091506958, -13.213619232177734, 0.0)),
    Vector((7.591209888458252, -13.091166496276855, 0.0)),
    Vector((8.562177658081055, -12.823997497558594, 0.0)),
    Vector((9.404135704040527, -12.100419998168945, 0.0)),
    Vector((11.230637550354004, -10.007609367370605, 0.0)),
    Vector((13.708988189697266, -12.05588150024414, 0.0)),
    Vector((17.891605377197266, -7.358185768127441, 0.0)),
    Vector((19.453306198120117, -8.682881355285645, 0.0)),
    Vector((24.077259063720703, -3.17254638671875, 0.0)),
    Vector((22.556297302246094, -1.8812475204467773, 0.0)),
    Vector((24.396371841430664, 0.04458841308951378, 0.0)),
    Vector((10.748499870300293, 12.12270450592041, 0.0)),
    Vector((0.0, 0.0, 15.546698570251465)),
    Vector((6.593071460723877, -5.799741268157959, 15.546698570251465)),
    Vector((4.474599361419678, -8.104057312011719, 15.546698570251465)),
    Vector((3.924611806869507, -9.350835800170898, 15.546698570251465)),
    Vector((3.822762966156006, -10.619877815246582, 15.546698570251465)),
    Vector((4.2097930908203125, -11.710808753967285, 15.546698570251465)),
    Vector((4.698672771453857, -12.28966999053955, 15.546698570251465)),
    Vector((5.676432132720947, -12.879661560058594, 15.546698570251465)),
    Vector((6.83073091506958, -13.213619232177734, 15.546698570251465)),
    Vector((7.591209888458252, -13.091166496276855, 15.546698570251465)),
    Vector((8.562177658081055, -12.823997497558594, 15.546698570251465)),
    Vector((9.404135704040527, -12.100419998168945, 15.546698570251465)),
    Vector((11.230637550354004, -10.007609367370605, 15.546698570251465)),
    Vector((13.708988189697266, -12.05588150024414, 15.546698570251465)),
    Vector((17.891605377197266, -7.358185768127441, 15.546698570251465)),
    Vector((19.453306198120117, -8.682881355285645, 15.546698570251465)),
    Vector((24.077259063720703, -3.17254638671875, 15.546698570251465)),
    Vector((22.556297302246094, -1.8812475204467773, 15.546698570251465)),
    Vector((24.396371841430664, 0.04458841308951378, 15.546698570251465)),
    Vector((10.748499870300293, 12.12270450592041, 15.546698570251465))
]
unitVectors = [
    Vector((0.7508355975151062, -0.6604891419410706, 0.0)),
    Vector((-0.6767971515655518, -0.7361695170402527, 0.0)),
    Vector((-0.40360227227211, -0.9149345755577087, 0.0)),
    Vector((-0.07999925315380096, -0.9967949986457825, 0.0)),
    Vector((0.3343527317047119, -0.9424479603767395, 0.0)),
    Vector((0.6452297568321228, -0.7639886140823364, 0.0)),
    Vector((0.8562014102935791, -0.5166420936584473, 0.0)),
    Vector((0.9606046080589294, -0.2779187560081482, 0.0)),
    Vector((0.9872829914093018, 0.1589728444814682, 0.0)),
    Vector((0.9641665816307068, 0.2652975916862488, 0.0)),
    Vector((0.758410632610321, 0.6517769694328308, 0.0)),
    Vector((0.6575442552566528, 0.7534158825874329, 0.0)),
    Vector((0.770818293094635, -0.637054979801178, 0.0)),
    Vector((0.6649753451347351, 0.7468653321266174, 0.0)),
    Vector((0.7626016139984131, -0.6468684077262878, 0.0)),
    Vector((0.6428065896034241, 0.7660285234451294, 0.0)),
    Vector((-0.7623147964477539, 0.6472064256668091, 0.0)),
    Vector((0.6908246278762817, 0.7230223417282104, 0.0)),
    Vector((-0.7488604187965393, 0.6627277731895447, 0.0)),
    Vector((-0.6634241938591003, -0.748243510723114, 0.0))
]
holesInfo = None
firstVertIndex = 20
numPolygonVerts = 20
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
