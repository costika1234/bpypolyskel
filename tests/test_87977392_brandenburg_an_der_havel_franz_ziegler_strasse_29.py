import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((-0.35995933413505554, 5.59937047958374, 0.0)),
    Vector((16.660001754760742, 6.690329551696777, 0.0)),
    Vector((16.666793823242188, 6.567878246307373, 0.0)),
    Vector((26.08006477355957, 7.169044494628906, 0.0)),
    Vector((26.650562286376953, 7.91488790512085, 0.0)),
    Vector((27.112398147583008, 7.681119918823242, 0.0)),
    Vector((27.750818252563477, 7.480748176574707, 0.0)),
    Vector((28.44356918334961, 7.491884231567383, 0.0)),
    Vector((29.095569610595703, 7.592075347900391, 0.0)),
    Vector((29.65248680114746, 7.881509304046631, 0.0)),
    Vector((30.34523582458496, 8.349055290222168, 0.0)),
    Vector((30.82744026184082, 9.028107643127441, 0.0)),
    Vector((31.133060455322266, 9.807345390319824, 0.0)),
    Vector((31.153430938720703, 10.553186416625977, 0.0)),
    Vector((31.037967681884766, 11.454874038696289, 0.0)),
    Vector((30.759504318237305, 12.067129135131836, 0.0)),
    Vector((30.222957611083984, 12.779570579528809, 0.0)),
    Vector((29.632078170776367, 13.235977172851562, 0.0)),
    Vector((29.02082633972168, 13.425216674804688, 0.0)),
    Vector((28.844226837158203, 16.174806594848633, 0.0)),
    Vector((27.750768661499023, 16.09687614440918, 0.0)),
    Vector((26.976451873779297, 28.252960205078125, 0.0)),
    Vector((27.73711585998535, 28.308624267578125, 0.0)),
    Vector((27.241283416748047, 36.011932373046875, 0.0)),
    Vector((17.101360321044922, 35.355098724365234, 0.0)),
    Vector((17.889236450195312, 23.165618896484375, 0.0)),
    Vector((16.177738189697266, 23.054292678833008, 0.0)),
    Vector((16.388290405273438, 19.73697280883789, 0.0)),
    Vector((18.14733123779297, 19.848299026489258, 0.0)),
    Vector((18.371469497680664, 16.330604553222656, 0.0)),
    Vector((1.0459175109863281, 15.217374801635742, 0.0)),
    Vector((0.631624698638916, 21.76296043395996, 0.0)),
    Vector((-4.8628315925598145, 21.406740188598633, 0.0)),
    Vector((-4.917163848876953, 22.21937370300293, 0.0)),
    Vector((-27.98845100402832, 20.738901138305664, 0.0)),
    Vector((-27.93412208557129, 19.826080322265625, 0.0)),
    Vector((-33.02787399291992, 19.503286361694336, 0.0)),
    Vector((-32.60004425048828, 12.879773139953613, 0.0)),
    Vector((-50.027496337890625, 11.766724586486816, 0.0)),
    Vector((-50.67938995361328, 21.941333770751953, 0.0)),
    Vector((-49.918724060058594, 21.996984481811523, 0.0)),
    Vector((-50.41443634033203, 29.700298309326172, 0.0)),
    Vector((-60.54079818725586, 29.043628692626953, 0.0)),
    Vector((-59.33211135864258, 10.174960136413574, 0.0)),
    Vector((-59.753196716308594, 10.141569137573242, 0.0)),
    Vector((-59.732826232910156, 9.807610511779785, 0.0)),
    Vector((-61.362831115722656, 9.707443237304688, 0.0)),
    Vector((-61.15232849121094, 6.501439094543457, 0.0)),
    Vector((-61.53266906738281, 6.078429698944092, 0.0)),
    Vector((-61.7703857421875, 5.466175556182861, 0.0)),
    Vector((-61.91301727294922, 4.920711517333984, 0.0)),
    Vector((-61.95377731323242, 4.1971354484558105, 0.0)),
    Vector((-61.797576904296875, 3.4735569953918457, 0.0)),
    Vector((-61.44441604614258, 2.805635452270508, 0.0)),
    Vector((-61.023338317871094, 2.3826162815093994, 0.0)),
    Vector((-60.48679733276367, 1.992991328239441, 0.0)),
    Vector((-59.87554931640625, 1.7035531997680664, 0.0)),
    Vector((-59.35258865356445, 1.5922273397445679, 0.0)),
    Vector((-58.748130798339844, 1.5588241815567017, 0.0)),
    Vector((-58.198001861572266, 1.6144773960113525, 0.0)),
    Vector((-57.518829345703125, 1.8593722581863403, 0.0)),
    Vector((-57.023033142089844, 2.2155888080596924, 0.0)),
    Vector((-56.41178894042969, 1.569928765296936, 0.0)),
    Vector((-46.842288970947266, 2.1820855140686035, 0.0)),
    Vector((-46.85586929321289, 2.393592596054077, 0.0)),
    Vector((-29.86984634399414, 3.4843909740448, 0.0)),
    Vector((-29.523502349853516, -1.8923425674438477, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((-0.35995933413505554, 5.59937047958374, 9.113946914672852)),
    Vector((16.660001754760742, 6.690329551696777, 9.113946914672852)),
    Vector((16.666793823242188, 6.567878246307373, 9.113946914672852)),
    Vector((26.08006477355957, 7.169044494628906, 9.113946914672852)),
    Vector((26.650562286376953, 7.91488790512085, 9.113946914672852)),
    Vector((27.112398147583008, 7.681119918823242, 9.113946914672852)),
    Vector((27.750818252563477, 7.480748176574707, 9.113946914672852)),
    Vector((28.44356918334961, 7.491884231567383, 9.113946914672852)),
    Vector((29.095569610595703, 7.592075347900391, 9.113946914672852)),
    Vector((29.65248680114746, 7.881509304046631, 9.113946914672852)),
    Vector((30.34523582458496, 8.349055290222168, 9.113946914672852)),
    Vector((30.82744026184082, 9.028107643127441, 9.113946914672852)),
    Vector((31.133060455322266, 9.807345390319824, 9.113946914672852)),
    Vector((31.153430938720703, 10.553186416625977, 9.113946914672852)),
    Vector((31.037967681884766, 11.454874038696289, 9.113946914672852)),
    Vector((30.759504318237305, 12.067129135131836, 9.113946914672852)),
    Vector((30.222957611083984, 12.779570579528809, 9.113946914672852)),
    Vector((29.632078170776367, 13.235977172851562, 9.113946914672852)),
    Vector((29.02082633972168, 13.425216674804688, 9.113946914672852)),
    Vector((28.844226837158203, 16.174806594848633, 9.113946914672852)),
    Vector((27.750768661499023, 16.09687614440918, 9.113946914672852)),
    Vector((26.976451873779297, 28.252960205078125, 9.113946914672852)),
    Vector((27.73711585998535, 28.308624267578125, 9.113946914672852)),
    Vector((27.241283416748047, 36.011932373046875, 9.113946914672852)),
    Vector((17.101360321044922, 35.355098724365234, 9.113946914672852)),
    Vector((17.889236450195312, 23.165618896484375, 9.113946914672852)),
    Vector((16.177738189697266, 23.054292678833008, 9.113946914672852)),
    Vector((16.388290405273438, 19.73697280883789, 9.113946914672852)),
    Vector((18.14733123779297, 19.848299026489258, 9.113946914672852)),
    Vector((18.371469497680664, 16.330604553222656, 9.113946914672852)),
    Vector((1.0459175109863281, 15.217374801635742, 9.113946914672852)),
    Vector((0.631624698638916, 21.76296043395996, 9.113946914672852)),
    Vector((-4.8628315925598145, 21.406740188598633, 9.113946914672852)),
    Vector((-4.917163848876953, 22.21937370300293, 9.113946914672852)),
    Vector((-27.98845100402832, 20.738901138305664, 9.113946914672852)),
    Vector((-27.93412208557129, 19.826080322265625, 9.113946914672852)),
    Vector((-33.02787399291992, 19.503286361694336, 9.113946914672852)),
    Vector((-32.60004425048828, 12.879773139953613, 9.113946914672852)),
    Vector((-50.027496337890625, 11.766724586486816, 9.113946914672852)),
    Vector((-50.67938995361328, 21.941333770751953, 9.113946914672852)),
    Vector((-49.918724060058594, 21.996984481811523, 9.113946914672852)),
    Vector((-50.41443634033203, 29.700298309326172, 9.113946914672852)),
    Vector((-60.54079818725586, 29.043628692626953, 9.113946914672852)),
    Vector((-59.33211135864258, 10.174960136413574, 9.113946914672852)),
    Vector((-59.753196716308594, 10.141569137573242, 9.113946914672852)),
    Vector((-59.732826232910156, 9.807610511779785, 9.113946914672852)),
    Vector((-61.362831115722656, 9.707443237304688, 9.113946914672852)),
    Vector((-61.15232849121094, 6.501439094543457, 9.113946914672852)),
    Vector((-61.53266906738281, 6.078429698944092, 9.113946914672852)),
    Vector((-61.7703857421875, 5.466175556182861, 9.113946914672852)),
    Vector((-61.91301727294922, 4.920711517333984, 9.113946914672852)),
    Vector((-61.95377731323242, 4.1971354484558105, 9.113946914672852)),
    Vector((-61.797576904296875, 3.4735569953918457, 9.113946914672852)),
    Vector((-61.44441604614258, 2.805635452270508, 9.113946914672852)),
    Vector((-61.023338317871094, 2.3826162815093994, 9.113946914672852)),
    Vector((-60.48679733276367, 1.992991328239441, 9.113946914672852)),
    Vector((-59.87554931640625, 1.7035531997680664, 9.113946914672852)),
    Vector((-59.35258865356445, 1.5922273397445679, 9.113946914672852)),
    Vector((-58.748130798339844, 1.5588241815567017, 9.113946914672852)),
    Vector((-58.198001861572266, 1.6144773960113525, 9.113946914672852)),
    Vector((-57.518829345703125, 1.8593722581863403, 9.113946914672852)),
    Vector((-57.023033142089844, 2.2155888080596924, 9.113946914672852)),
    Vector((-56.41178894042969, 1.569928765296936, 9.113946914672852)),
    Vector((-46.842288970947266, 2.1820855140686035, 9.113946914672852)),
    Vector((-46.85586929321289, 2.393592596054077, 9.113946914672852)),
    Vector((-29.86984634399414, 3.4843909740448, 9.113946914672852)),
    Vector((-29.523502349853516, -1.8923425674438477, 9.113946914672852)),
    Vector((0.0, 0.0, 9.113946914672852))
]
unitVectors = [
    Vector((0.9979519248008728, 0.06396752595901489, 0.0)),
    Vector((0.0553823746740818, -0.9984651803970337, 0.0)),
    Vector((0.9979669451713562, 0.06373385339975357, 0.0)),
    Vector((0.6075486540794373, 0.7942824363708496, 0.0)),
    Vector((0.8922140002250671, -0.4516129791736603, 0.0)),
    Vector((0.9541109800338745, -0.29945307970046997, 0.0)),
    Vector((0.999870777130127, 0.016073044389486313, 0.0)),
    Vector((0.9883983135223389, 0.15188445150852203, 0.0)),
    Vector((0.8873230814933777, 0.46114832162857056, 0.0)),
    Vector((0.8288817405700684, 0.5594238638877869, 0.0)),
    Vector((0.5789836049079895, 0.8153391480445862, 0.0)),
    Vector((0.3651255667209625, 0.9309582114219666, 0.0)),
    Vector((0.027301916852593422, 0.9996272325515747, 0.0)),
    Vector((-0.12701526284217834, 0.9919008016586304, 0.0)),
    Vector((-0.4140070080757141, 0.9102737903594971, 0.0)),
    Vector((-0.6015886664390564, 0.7988059520721436, 0.0)),
    Vector((-0.7914029359817505, 0.6112948060035706, 0.0)),
    Vector((-0.9552671313285828, 0.2957443594932556, 0.0)),
    Vector((-0.06409551203250885, 0.9979438185691833, 0.0)),
    Vector((-0.9974699020385742, -0.07108939439058304, 0.0)),
    Vector((-0.06356904655694962, 0.9979774355888367, 0.0)),
    Vector((0.9973331093788147, 0.07298309355974197, 0.0)),
    Vector((-0.06423324346542358, 0.9979348182678223, 0.0)),
    Vector((-0.9979085326194763, -0.06464150547981262, 0.0)),
    Vector((0.06450115144252777, -0.9979175925254822, 0.0)),
    Vector((-0.9978911280632019, -0.06490888446569443, 0.0)),
    Vector((0.0633431151509285, -0.9979918003082275, 0.0)),
    Vector((0.9980033040046692, 0.06316165626049042, 0.0)),
    Vector((0.06358842551708221, -0.9979761838912964, 0.0)),
    Vector((-0.9979421496391296, -0.06412141770124435, 0.0)),
    Vector((-0.06316706538200378, 0.9980029463768005, 0.0)),
    Vector((-0.9979049563407898, -0.06469684094190598, 0.0)),
    Vector((-0.06671054661273956, 0.9977723360061646, 0.0)),
    Vector((-0.9979474544525146, -0.06403777003288269, 0.0)),
    Vector((0.05941247567534447, -0.998233437538147, 0.0)),
    Vector((-0.9979981184005737, -0.06324370950460434, 0.0)),
    Vector((0.06445824354887009, -0.9979203939437866, 0.0)),
    Vector((-0.9979667067527771, -0.06373768299818039, 0.0)),
    Vector((-0.06393952667713165, 0.9979537129402161, 0.0)),
    Vector((0.9973344206809998, 0.07296550273895264, 0.0)),
    Vector((-0.0642177015542984, 0.9979358911514282, 0.0)),
    Vector((-0.9979040026664734, -0.06471161544322968, 0.0)),
    Vector((0.06392685323953629, -0.9979546070098877, 0.0)),
    Vector((-0.9968706369400024, -0.07904930412769318, 0.0)),
    Vector((0.06088386848568916, -0.9981448650360107, 0.0)),
    Vector((-0.9981171488761902, -0.06133642792701721, 0.0)),
    Vector((0.06551779806613922, -0.9978514313697815, 0.0)),
    Vector((-0.6686072945594788, -0.7436155676841736, 0.0)),
    Vector((-0.36194080114364624, -0.932201087474823, 0.0)),
    Vector((-0.2529807686805725, -0.9674713015556335, 0.0)),
    Vector((-0.05624222382903099, -0.9984172582626343, 0.0)),
    Vector((0.21101145446300507, -0.9774836301803589, 0.0)),
    Vector((0.46742793917655945, -0.8840311169624329, 0.0)),
    Vector((0.7054785490036011, -0.7087312936782837, 0.0)),
    Vector((0.8091567158699036, -0.5875928401947021, 0.0)),
    Vector((0.9037951827049255, -0.42796504497528076, 0.0)),
    Vector((0.9780839681625366, -0.208210751414299, 0.0)),
    Vector((0.9984765648841858, -0.05517716705799103, 0.0)),
    Vector((0.9949219226837158, 0.10065022855997086, 0.0)),
    Vector((0.9407139420509338, 0.3392010033130646, 0.0)),
    Vector((0.8121216893196106, 0.5834881067276001, 0.0)),
    Vector((0.6874875426292419, -0.7261962294578552, 0.0)),
    Vector((0.9979601502418518, 0.06383907794952393, 0.0)),
    Vector((-0.06407546997070312, 0.9979450702667236, 0.0)),
    Vector((0.9979444146156311, 0.06408540159463882, 0.0)),
    Vector((0.06428208947181702, -0.9979317784309387, 0.0)),
    Vector((0.9979521632194519, 0.06396488100290298, 0.0)),
    Vector((-0.06415325403213501, 0.9979401230812073, 0.0))
]
holesInfo = None
firstVertIndex = 68
numPolygonVerts = 68
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
