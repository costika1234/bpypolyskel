import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((10.974563598632812, 8.237646102905273, 0.0)),
    Vector((3.1741156578063965, 18.634883880615234, 0.0)),
    Vector((1.9916020631790161, 17.83338165283203, 0.0)),
    Vector((0.9024447202682495, 16.90943145751953, 0.0)),
    Vector((-0.07261049747467041, 15.851895332336426, 0.0)),
    Vector((-0.9128177762031555, 14.694172859191895, 0.0)),
    Vector((-1.618177056312561, 13.447394371032715, 0.0)),
    Vector((-2.1783154010772705, 12.133824348449707, 0.0)),
    Vector((-2.582859992980957, 10.753462791442871, 0.0)),
    Vector((-2.8214375972747803, 9.350837707519531, 0.0)),
    Vector((-2.904421329498291, 7.914815902709961, 0.0)),
    Vector((-2.811065196990967, 6.489926338195801, 0.0)),
    Vector((-2.562114953994751, 5.076169013977051, 0.0)),
    Vector((-2.147197723388672, 3.706939220428467, 0.0)),
    Vector((-1.5766863822937012, 2.393369197845459, 0.0)),
    Vector((-0.8609538078308105, 1.1465908288955688, 0.0)),
    Vector((0.0, 0.0, 3.5)),
    Vector((10.974563598632812, 8.237646102905273, 3.5)),
    Vector((3.1741156578063965, 18.634883880615234, 3.5)),
    Vector((1.9916020631790161, 17.83338165283203, 3.5)),
    Vector((0.9024447202682495, 16.90943145751953, 3.5)),
    Vector((-0.07261049747467041, 15.851895332336426, 3.5)),
    Vector((-0.9128177762031555, 14.694172859191895, 3.5)),
    Vector((-1.618177056312561, 13.447394371032715, 3.5)),
    Vector((-2.1783154010772705, 12.133824348449707, 3.5)),
    Vector((-2.582859992980957, 10.753462791442871, 3.5)),
    Vector((-2.8214375972747803, 9.350837707519531, 3.5)),
    Vector((-2.904421329498291, 7.914815902709961, 3.5)),
    Vector((-2.811065196990967, 6.489926338195801, 3.5)),
    Vector((-2.562114953994751, 5.076169013977051, 3.5)),
    Vector((-2.147197723388672, 3.706939220428467, 3.5)),
    Vector((-1.5766863822937012, 2.393369197845459, 3.5)),
    Vector((-0.8609538078308105, 1.1465908288955688, 3.5))
]
unitVectors = [
    Vector((0.7997648119926453, 0.6003135442733765, 0.0)),
    Vector((-0.6001240611076355, 0.7999069094657898, 0.0)),
    Vector((-0.827774167060852, -0.5610615015029907, 0.0)),
    Vector((-0.7625724077224731, -0.6469027996063232, 0.0)),
    Vector((-0.6778550744056702, -0.7351955771446228, 0.0)),
    Vector((-0.5873608589172363, -0.8093251585960388, 0.0)),
    Vector((-0.49240556359291077, -0.8703659176826477, 0.0)),
    Vector((-0.3922501504421234, -0.9198585152626038, 0.0)),
    Vector((-0.2812421917915344, -0.9596368670463562, 0.0)),
    Vector((-0.16768521070480347, -0.9858405590057373, 0.0)),
    Vector((-0.057690996676683426, -0.998334527015686, 0.0)),
    Vector((0.06537798047065735, -0.9978605508804321, 0.0)),
    Vector((0.17342297732830048, -0.984847366809845, 0.0)),
    Vector((0.2900068461894989, -0.9570246338844299, 0.0)),
    Vector((0.3983701467514038, -0.9172247052192688, 0.0)),
    Vector((0.49786198139190674, -0.867256224155426, 0.0)),
    Vector((0.6004510521888733, -0.7996615171432495, 0.0))
]
holesInfo = None
firstVertIndex = 17
numPolygonVerts = 17
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
