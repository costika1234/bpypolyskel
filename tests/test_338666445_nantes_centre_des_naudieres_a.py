import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((6.984221458435059, 4.21901273727417, 0.0)),
    Vector((6.643712043762207, 4.753345966339111, 0.0)),
    Vector((6.227533340454102, 5.232019424438477, 0.0)),
    Vector((5.607049465179443, 5.732956409454346, 0.0)),
    Vector((5.137903690338135, 6.000123023986816, 0.0)),
    Vector((4.691458225250244, 6.178233623504639, 0.0)),
    Vector((4.108809471130371, 6.334080219268799, 0.0)),
    Vector((3.2461862564086914, 6.389739513397217, 0.0)),
    Vector((2.4592320919036865, 6.289551734924316, 0.0)),
    Vector((1.6722779273986816, 6.0223846435546875, 0.0)),
    Vector((1.1350302696228027, 5.7218217849731445, 0.0)),
    Vector((0.6356170177459717, 5.3322038650512695, 0.0)),
    Vector((0.21187235414981842, 4.88692569732666, 0.0)),
    Vector((-0.18917176127433777, 4.296932220458984, 0.0)),
    Vector((-0.4615791440010071, 3.6958072185516357, 0.0)),
    Vector((-0.6431841254234314, 3.0056262016296387, 0.0)),
    Vector((-0.7037191987037659, 2.2375218868255615, 0.0)),
    Vector((-0.6658849120140076, 1.725452184677124, 0.0)),
    Vector((-0.5750824809074402, 1.2801741361618042, 0.0)),
    Vector((-0.4615793526172638, 0.9128198623657227, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((6.984221458435059, 4.21901273727417, 6.030071258544922)),
    Vector((6.643712043762207, 4.753345966339111, 6.030071258544922)),
    Vector((6.227533340454102, 5.232019424438477, 6.030071258544922)),
    Vector((5.607049465179443, 5.732956409454346, 6.030071258544922)),
    Vector((5.137903690338135, 6.000123023986816, 6.030071258544922)),
    Vector((4.691458225250244, 6.178233623504639, 6.030071258544922)),
    Vector((4.108809471130371, 6.334080219268799, 6.030071258544922)),
    Vector((3.2461862564086914, 6.389739513397217, 6.030071258544922)),
    Vector((2.4592320919036865, 6.289551734924316, 6.030071258544922)),
    Vector((1.6722779273986816, 6.0223846435546875, 6.030071258544922)),
    Vector((1.1350302696228027, 5.7218217849731445, 6.030071258544922)),
    Vector((0.6356170177459717, 5.3322038650512695, 6.030071258544922)),
    Vector((0.21187235414981842, 4.88692569732666, 6.030071258544922)),
    Vector((-0.18917176127433777, 4.296932220458984, 6.030071258544922)),
    Vector((-0.4615791440010071, 3.6958072185516357, 6.030071258544922)),
    Vector((-0.6431841254234314, 3.0056262016296387, 6.030071258544922)),
    Vector((-0.7037191987037659, 2.2375218868255615, 6.030071258544922)),
    Vector((-0.6658849120140076, 1.725452184677124, 6.030071258544922)),
    Vector((-0.5750824809074402, 1.2801741361618042, 6.030071258544922)),
    Vector((-0.4615793526172638, 0.9128198623657227, 6.030071258544922)),
    Vector((0.0, 0.0, 6.030071258544922))
]
unitVectors = [
    Vector((-0.5374137163162231, 0.8433188199996948, 0.0)),
    Vector((-0.6561256647109985, 0.7546516060829163, 0.0)),
    Vector((-0.7780779004096985, 0.6281678080558777, 0.0)),
    Vector((-0.8689735531806946, 0.49485841393470764, 0.0)),
    Vector((-0.9288117289543152, 0.3705519139766693, 0.0)),
    Vector((-0.9660391807556152, 0.2583956718444824, 0.0)),
    Vector((-0.9979248046875, 0.06438940018415451, 0.0)),
    Vector((-0.9919931888580322, -0.12629146873950958, 0.0)),
    Vector((-0.9469184279441833, -0.32147416472435, 0.0)),
    Vector((-0.8727107644081116, -0.4882374703884125, 0.0)),
    Vector((-0.7884443998336792, -0.615105926990509, 0.0)),
    Vector((-0.689373791217804, -0.7244057655334473, 0.0)),
    Vector((-0.5621649026870728, -0.8270252346992493, 0.0)),
    Vector((-0.41275879740715027, -0.9108403325080872, 0.0)),
    Vector((-0.2544649839401245, -0.9670820236206055, 0.0)),
    Vector((-0.07856737822294235, -0.9969087243080139, 0.0)),
    Vector((0.0736841931939125, -0.9972816705703735, 0.0)),
    Vector((0.19981077313423157, -0.9798344373703003, 0.0)),
    Vector((0.2952048182487488, -0.9554340243339539, 0.0)),
    Vector((0.4512520432472229, -0.8923965692520142, 0.0)),
    Vector((0.8559492230415344, 0.517059862613678, 0.0))
]
holesInfo = None
firstVertIndex = 21
numPolygonVerts = 21
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
