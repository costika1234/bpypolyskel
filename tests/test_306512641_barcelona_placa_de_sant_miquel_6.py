import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((0.0, 0.0, 0.0)),
    Vector((3.082068920135498, 3.2505297660827637, 0.0)),
    Vector((3.9340219497680664, 5.120697498321533, 0.0)),
    Vector((4.268120765686035, 6.412003993988037, 0.0)),
    Vector((4.309882640838623, 7.669914245605469, 0.0)),
    Vector((4.176241874694824, 9.172727584838867, 0.0)),
    Vector((3.7085020542144775, 10.486296653747559, 0.0)),
    Vector((3.3994598388671875, 11.154213905334473, 0.0)),
    Vector((2.597621202468872, 12.300804138183594, 0.0)),
    Vector((2.188349723815918, 12.723817825317383, 0.0)),
    Vector((1.294634222984314, 13.369470596313477, 0.0)),
    Vector((0.2672792971134186, 13.948331832885742, 0.0)),
    Vector((-0.8436002135276794, 14.427005767822266, 0.0)),
    Vector((-1.904364824295044, 14.638513565063477, 0.0)),
    Vector((-3.883902072906494, 14.593986511230469, 0.0)),
    Vector((-5.562750339508057, 14.148709297180176, 0.0)),
    Vector((-6.322825908660889, 13.770223617553711, 0.0)),
    Vector((-7.032787322998047, 13.324946403503418, 0.0)),
    Vector((-7.95991325378418, 12.556842803955078, 0.0)),
    Vector((-8.394242286682129, 12.05590534210205, 0.0)),
    Vector((-9.145967483520508, 10.998371124267578, 0.0)),
    Vector((-10.323668479919434, 9.807254791259766, 0.0)),
    Vector((0.0, 0.0, 13.316681861877441)),
    Vector((3.082068920135498, 3.2505297660827637, 13.316681861877441)),
    Vector((3.9340219497680664, 5.120697498321533, 13.316681861877441)),
    Vector((4.268120765686035, 6.412003993988037, 13.316681861877441)),
    Vector((4.309882640838623, 7.669914245605469, 13.316681861877441)),
    Vector((4.176241874694824, 9.172727584838867, 13.316681861877441)),
    Vector((3.7085020542144775, 10.486296653747559, 13.316681861877441)),
    Vector((3.3994598388671875, 11.154213905334473, 13.316681861877441)),
    Vector((2.597621202468872, 12.300804138183594, 13.316681861877441)),
    Vector((2.188349723815918, 12.723817825317383, 13.316681861877441)),
    Vector((1.294634222984314, 13.369470596313477, 13.316681861877441)),
    Vector((0.2672792971134186, 13.948331832885742, 13.316681861877441)),
    Vector((-0.8436002135276794, 14.427005767822266, 13.316681861877441)),
    Vector((-1.904364824295044, 14.638513565063477, 13.316681861877441)),
    Vector((-3.883902072906494, 14.593986511230469, 13.316681861877441)),
    Vector((-5.562750339508057, 14.148709297180176, 13.316681861877441)),
    Vector((-6.322825908660889, 13.770223617553711, 13.316681861877441)),
    Vector((-7.032787322998047, 13.324946403503418, 13.316681861877441)),
    Vector((-7.95991325378418, 12.556842803955078, 13.316681861877441)),
    Vector((-8.394242286682129, 12.05590534210205, 13.316681861877441)),
    Vector((-9.145967483520508, 10.998371124267578, 13.316681861877441)),
    Vector((-10.323668479919434, 9.807254791259766, 13.316681861877441))
]
unitVectors = [
    Vector((0.688052773475647, 0.7256606221199036, 0.0)),
    Vector((0.41455963253974915, 0.9100220799446106, 0.0)),
    Vector((0.25048136711120605, 0.9681214094161987, 0.0)),
    Vector((0.03318112716078758, 0.9994493722915649, 0.0)),
    Vector((-0.0885775089263916, 0.9960692524909973, 0.0)),
    Vector((-0.3354508578777313, 0.9420576691627502, 0.0)),
    Vector((-0.4199235439300537, 0.9075594544410706, 0.0)),
    Vector((-0.5730907320976257, 0.8194918632507324, 0.0)),
    Vector((-0.695336639881134, 0.7186841368675232, 0.0)),
    Vector((-0.8105967044830322, 0.585604727268219, 0.0)),
    Vector((-0.8712223172187805, 0.4908885955810547, 0.0)),
    Vector((-0.918370246887207, 0.3957223892211914, 0.0)),
    Vector((-0.9806951880455017, 0.1955426186323166, 0.0)),
    Vector((-0.999747097492218, -0.022487979382276535, 0.0)),
    Vector((-0.9665803909301758, -0.25636398792266846, 0.0)),
    Vector((-0.8951571583747864, -0.4457506239414215, 0.0)),
    Vector((-0.8471652865409851, -0.5313294529914856, 0.0)),
    Vector((-0.7700568437576294, -0.63797527551651, 0.0)),
    Vector((-0.6550883650779724, -0.7555522918701172, 0.0)),
    Vector((-0.5793706178665161, -0.8150641918182373, 0.0)),
    Vector((-0.7030909657478333, -0.7110999226570129, 0.0)),
    Vector((0.7250075340270996, -0.6887409687042236, 0.0))
]
holesInfo = None
firstVertIndex = 22
numPolygonVerts = 22
faces = []

bpypolyskel.debug_outputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debug_outputs["skeleton"])
