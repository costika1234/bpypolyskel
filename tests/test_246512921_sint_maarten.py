import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((4.170375823974609, -2.849778413772583, 0.0)),
    Vector((9.060511589050293, -4.118819236755371, 0.0)),
    Vector((14.088249206542969, -3.6846699714660645, 0.0)),
    Vector((18.682010650634766, -1.5807278156280518, 0.0)),
    Vector((22.301977157592773, 1.9481037855148315, 0.0)),
    Vector((24.524761199951172, 6.478809833526611, 0.0)),
    Vector((25.10691261291504, 11.499319076538086, 0.0)),
    Vector((24.101360321044922, 16.074548721313477, 0.0)),
    Vector((22.09026336669922, 19.325075149536133, 0.0)),
    Vector((29.15024757385254, 25.42539405822754, 0.0)),
    Vector((27.022722244262695, 27.406877517700195, 0.0)),
    Vector((20.354372024536133, 21.37335205078125, 0.0)),
    Vector((18.671403884887695, 23.087671279907227, 0.0)),
    Vector((13.865949630737305, 25.03575897216797, 0.0)),
    Vector((9.198099136352539, 25.436506271362305, 0.0)),
    Vector((4.636096477508545, 24.34557342529297, 0.0)),
    Vector((0.6350817680358887, 21.885412216186523, 0.0)),
    Vector((-2.392141819000244, 18.30092430114746, 0.0)),
    Vector((-4.149202823638916, 13.959465026855469, 0.0)),
    Vector((-4.413821220397949, 8.916691780090332, 0.0)),
    Vector((-2.974302291870117, 4.074293613433838, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((4.170375823974609, -2.849778413772583, 12.24326229095459)),
    Vector((9.060511589050293, -4.118819236755371, 12.24326229095459)),
    Vector((14.088249206542969, -3.6846699714660645, 12.24326229095459)),
    Vector((18.682010650634766, -1.5807278156280518, 12.24326229095459)),
    Vector((22.301977157592773, 1.9481037855148315, 12.24326229095459)),
    Vector((24.524761199951172, 6.478809833526611, 12.24326229095459)),
    Vector((25.10691261291504, 11.499319076538086, 12.24326229095459)),
    Vector((24.101360321044922, 16.074548721313477, 12.24326229095459)),
    Vector((22.09026336669922, 19.325075149536133, 12.24326229095459)),
    Vector((29.15024757385254, 25.42539405822754, 12.24326229095459)),
    Vector((27.022722244262695, 27.406877517700195, 12.24326229095459)),
    Vector((20.354372024536133, 21.37335205078125, 12.24326229095459)),
    Vector((18.671403884887695, 23.087671279907227, 12.24326229095459)),
    Vector((13.865949630737305, 25.03575897216797, 12.24326229095459)),
    Vector((9.198099136352539, 25.436506271362305, 12.24326229095459)),
    Vector((4.636096477508545, 24.34557342529297, 12.24326229095459)),
    Vector((0.6350817680358887, 21.885412216186523, 12.24326229095459)),
    Vector((-2.392141819000244, 18.30092430114746, 12.24326229095459)),
    Vector((-4.149202823638916, 13.959465026855469, 12.24326229095459)),
    Vector((-4.413821220397949, 8.916691780090332, 12.24326229095459)),
    Vector((-2.974302291870117, 4.074293613433838, 12.24326229095459)),
    Vector((0.0, 0.0, 12.24326229095459))
]
unitVectors = [
    Vector((0.9679378867149353, -0.2511898875236511, 0.0)),
    Vector((0.9962924718856812, 0.08603066951036453, 0.0)),
    Vector((0.9091795682907104, 0.416404128074646, 0.0)),
    Vector((0.7160630226135254, 0.6980356574058533, 0.0)),
    Vector((0.4404527246952057, 0.8977758288383484, 0.0)),
    Vector((0.11518289148807526, 0.9933443069458008, 0.0)),
    Vector((-0.21465851366519928, 0.9766891002655029, 0.0)),
    Vector((-0.5261401534080505, 0.8503978252410889, 0.0)),
    Vector((0.7566608190536499, 0.6538076996803284, 0.0)),
    Vector((-0.7317766547203064, 0.6815446019172668, 0.0)),
    Vector((-0.7415215969085693, -0.670928955078125, 0.0)),
    Vector((-0.7005515694618225, 0.7136017680168152, 0.0)),
    Vector((-0.9267439842224121, 0.3756936192512512, 0.0)),
    Vector((-0.996334969997406, 0.08553798496723175, 0.0)),
    Vector((-0.9725779294967651, -0.23257707059383392, 0.0)),
    Vector((-0.8518484830856323, -0.5237882733345032, 0.0)),
    Vector((-0.6452209949493408, -0.7639960050582886, 0.0)),
    Vector((-0.3751567304134369, -0.926961362361908, 0.0)),
    Vector((-0.05240267887711525, -0.9986260533332825, 0.0)),
    Vector((0.28494971990585327, -0.95854252576828, 0.0)),
    Vector((0.5896202921867371, -0.8076805472373962, 0.0)),
    Vector((0.8256426453590393, -0.5641934275627136, 0.0))
]
holesInfo = None
firstVertIndex = 22
numPolygonVerts = 22
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
