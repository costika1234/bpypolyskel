import pytest
from mathutils import Vector

from bpypolyskel import bpypolyskel

verts = [
    Vector((-1.1771844625473022, 0.4898058772087097, 0.0)),
    Vector((0.7375125288963318, 5.131828784942627, 0.0)),
    Vector((-10.59464168548584, 9.784994125366211, 0.0)),
    Vector((-14.182944297790527, 1.0575542449951172, 0.0)),
    Vector((-14.253863334655762, -0.3673350512981415, 0.0)),
    Vector((-13.9347505569458, -1.7588295936584473, 0.0)),
    Vector((-13.246880531311035, -3.0056095123291016, 0.0)),
    Vector((-12.246984481811523, -4.018619537353516, 0.0)),
    Vector((-3.1911678314208984, -7.747835636138916, 0.0)),
    Vector((-1.7941454648971558, -7.669912815093994, 0.0)),
    Vector((-0.4893123507499695, -7.157843112945557, 0.0)),
    Vector((0.5885930061340332, -6.256155490875244, 0.0)),
    Vector((1.319015383720398, -5.065036773681641, 0.0)),
    Vector((1.6381314992904663, -3.7069387435913086, 0.0)),
    Vector((1.5033930540084839, -2.3154451847076416, 0.0)),
    Vector((0.9360746741294861, -1.035271167755127, 0.0)),
    Vector((0.0, 0.0, 0.0)),
    Vector((-1.1771844625473022, 0.4898058772087097, 6.348609447479248)),
    Vector((0.7375125288963318, 5.131828784942627, 6.348609447479248)),
    Vector((-10.59464168548584, 9.784994125366211, 6.348609447479248)),
    Vector((-14.182944297790527, 1.0575542449951172, 6.348609447479248)),
    Vector((-14.253863334655762, -0.3673350512981415, 6.348609447479248)),
    Vector((-13.9347505569458, -1.7588295936584473, 6.348609447479248)),
    Vector((-13.246880531311035, -3.0056095123291016, 6.348609447479248)),
    Vector((-12.246984481811523, -4.018619537353516, 6.348609447479248)),
    Vector((-3.1911678314208984, -7.747835636138916, 6.348609447479248)),
    Vector((-1.7941454648971558, -7.669912815093994, 6.348609447479248)),
    Vector((-0.4893123507499695, -7.157843112945557, 6.348609447479248)),
    Vector((0.5885930061340332, -6.256155490875244, 6.348609447479248)),
    Vector((1.319015383720398, -5.065036773681641, 6.348609447479248)),
    Vector((1.6381314992904663, -3.7069387435913086, 6.348609447479248)),
    Vector((1.5033930540084839, -2.3154451847076416, 6.348609447479248)),
    Vector((0.9360746741294861, -1.035271167755127, 6.348609447479248)),
    Vector((0.0, 0.0, 6.348609447479248))
]
unitVectors = [
    Vector((0.3813074827194214, 0.9244482517242432, 0.0)),
    Vector((-0.9250516891479492, 0.379841148853302, 0.0)),
    Vector((-0.3802650570869446, -0.9248775243759155, 0.0)),
    Vector((-0.04971007630228996, -0.9987636208534241, 0.0)),
    Vector((0.22352831065654755, -0.974697470664978, 0.0)),
    Vector((0.48307275772094727, -0.8755802512168884, 0.0)),
    Vector((0.7024850845336914, -0.7116984128952026, 0.0)),
    Vector((0.9246655106544495, -0.380780428647995, 0.0)),
    Vector((0.9984480142593384, 0.055691223591566086, 0.0)),
    Vector((0.9308832883834839, 0.3653165400028229, 0.0)),
    Vector((0.7670184969902039, 0.6416249871253967, 0.0)),
    Vector((0.5227606892585754, 0.8524794578552246, 0.0)),
    Vector((0.22874294221401215, 0.9734868407249451, 0.0)),
    Vector((-0.09637930989265442, 0.9953446388244629, 0.0)),
    Vector((-0.4051555395126343, 0.9142478108406067, 0.0)),
    Vector((-0.6706771850585938, 0.7417492866516113, 0.0)),
    Vector((-0.9232683181762695, 0.384155809879303, 0.0))
]
holesInfo = None
firstVertIndex = 17
numPolygonVerts = 17
faces = []

bpypolyskel.debugOutputs["skeleton"] = 1


@pytest.mark.dependency()
@pytest.mark.timeout(10)
def test_polygonize():
    global faces
    faces = bpypolyskel.polygonize(verts, firstVertIndex, numPolygonVerts, holesInfo, 0.0, 0.5, None, unitVectors)


@pytest.mark.dependency(depends=["test_polygonize"])
def test_numVertsInFace():
    for face in faces:
        assert len(face) >= 3


@pytest.mark.dependency(depends=["test_polygonize"])
def test_duplication():
    for face in faces:
        assert len(face) == len(set(face))


@pytest.mark.dependency(depends=["test_polygonize"])
def test_edgeCrossing():
    assert not bpypolyskel.check_edge_crossing(bpypolyskel.debugOutputs["skeleton"])
